{"version":3,"file":"index.js","sources":["../node_modules/blakejs/util.js","../node_modules/blakejs/blake2b.js","../node_modules/blakejs/blake2s.js","../node_modules/blakejs/index.js","../src/processors/hash.ts","../src/types.ts","../src/core/cell/dht/get.ts","../src/core/network/dht_arc.ts","../src/core/cell/state.ts","../src/core/cell/cascade/authority.ts","../src/core/cell/cascade/cascade.ts","../src/core/cell/dht/put.ts","../src/core/cell/source-chain/get.ts","../src/core/cell/utils.ts","../src/core/cell/source-chain/put.ts","../src/core/cell/source-chain/utils.ts","../src/core/cell/source-chain/builder-headers.ts","../src/core/cell/workflows/publish_dht_ops.ts","../src/core/cell/workflows/produce_dht_ops.ts","../src/core/cell/sys_validate/index.ts","../src/core/cell/workflows/sys_validation.ts","../src/core/network/utils.ts","../src/core/cell/workflows/validation_receipt.ts","../src/core/cell/workflows/workflows.ts","../src/core/cell/workflows/integrate_dht_ops.ts","../src/core/hdk/host-fn/actions/common/create.ts","../src/core/hdk/host-fn/actions/create_cap_grant.ts","../src/core/hdk/host-fn/actions/create_entry.ts","../src/core/hdk/host-fn/actions/create_link.ts","../src/core/hdk/host-fn/actions/common/delete.ts","../src/core/hdk/host-fn/actions/delete_cap_grant.ts","../src/core/hdk/host-fn/actions/delete_entry.ts","../src/core/hdk/host-fn/actions/delete_link.ts","../src/core/hdk/host-fn/actions/common/update.ts","../src/core/hdk/host-fn/actions/update_entry.ts","../src/core/hdk/host-fn/agent_info.ts","../src/core/hdk/host-fn/call_remote.ts","../src/core/hdk/host-fn/get.ts","../src/core/hdk/host-fn/get_detailts.ts","../src/core/hdk/host-fn/get_links.ts","../src/core/hdk/host-fn/hash_entry.ts","../src/core/hdk/host-fn/query.ts","../src/core/hdk/path.ts","../src/core/hdk/context.ts","../src/core/cell/workflows/app_validation.ts","../src/core/cell/workflows/call_zome_fn.ts","../src/core/cell/workflows/genesis.ts","../src/core/cell/workflows/incoming_dht_ops.ts","../src/executor/middleware-executor.ts","../src/core/cell/cell.ts","../src/core/network/connection.ts","../src/executor/delay-middleware.ts","../src/core/network/gossip/bloom/index.ts","../src/core/network/network-request.ts","../src/core/network/p2p-cell.ts","../src/core/network/kitsune_p2p.ts","../src/core/network/network.ts","../src/core/conductor.ts","../src/dnas/demo-dna.ts","../src/bootstrap/bootstrap-service.ts","../src/processors/create-conductors.ts"],"sourcesContent":["var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","import {\n  serializeHash,\n  Dictionary,\n  Hash,\n} from '@holochain-open-dev/core-types';\n// @ts-ignore\nimport blake from 'blakejs';\n\nexport enum HashType {\n  AGENT,\n  ENTRY,\n  DHTOP,\n  HEADER,\n  DNA,\n}\n\nexport const AGENT_PREFIX = 'hCAk';\nexport const ENTRY_PREFIX = 'hCEk';\nexport const DHTOP_PREFIX = 'hCQk';\nexport const DNA_PREFIX = 'hC0k';\nexport const HEADER_PREFIX = 'hCkk';\n\nfunction getPrefix(type: HashType) {\n  switch (type) {\n    case HashType.AGENT:\n      return AGENT_PREFIX;\n    case HashType.ENTRY:\n      return ENTRY_PREFIX;\n    case HashType.DHTOP:\n      return DHTOP_PREFIX;\n    case HashType.HEADER:\n      return HEADER_PREFIX;\n    case HashType.DNA:\n      return DNA_PREFIX;\n  }\n}\n\nfunction str2ab(str: string) {\n  var buf = new ArrayBuffer(str.length);\n  var bufView = new Uint8Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\nconst hashCache: Dictionary<Hash> = {};\n\n// From https://github.com/holochain/holochain/blob/dc0cb61d0603fa410ac5f024ed6ccfdfc29715b3/crates/holo_hash/src/encode.rs\nexport function hash(content: any, type: HashType): Hash {\n  const contentString =\n    typeof content === 'string' ? content : JSON.stringify(content);\n\n  if (hashCache[contentString]) return hashCache[contentString];\n\n  const hashable = new Uint8Array(str2ab(contentString));\n\n  const bytesHash = blake.blake2b(hashable, null, 32);\n\n  const strHash = serializeHash(bytesHash);\n  const hash = `u${getPrefix(type)}${strHash.slice(1)}`;\n\n  hashCache[contentString] = hash;\n\n  return hash;\n}\n\nconst hashLocationCache: Dictionary<number> = {};\n\nexport function location(hash: string): number {\n  if (hashLocationCache[hash]) return hashLocationCache[hash];\n\n  const hashable = new Uint8Array(str2ab(hash.slice(5)));\n  const hash128: Uint8Array = blake.blake2b(hashable, null, 16);\n\n  const out = [hash128[0], hash128[1], hash128[2], hash128[3]];\n\n  for (let i = 4; i < 16; i += 4) {\n    out[0] ^= hash128[i];\n    out[1] ^= hash128[i + 1];\n    out[2] ^= hash128[i + 2];\n    out[3] ^= hash128[i + 3];\n  }\n\n  const view = new DataView(new Uint8Array(out).buffer, 0);\n  const location = wrap(view.getUint32(0, false));\n\n  hashLocationCache[hash] = location;\n\n  return location;\n}\n\n// We return the distance as the shortest distance between two hashes in the circle\nexport function distance(hash1: Hash, hash2: Hash): number {\n  const location1 = location(hash1);\n  const location2 = location(hash2);\n\n  return shortest_arc_distance(location1, location2) + 1;\n}\n\nexport function shortest_arc_distance(location1: number, location2: number): number {\n  const distance1 = wrap(location1 - location2);\n  const distance2 = wrap(location2 - location1);\n  return Math.min(distance1, distance2);\n}\n\nconst MAX_UINT = 4294967295;\n\nexport function wrap(uint: number): number {\n  if (uint < 0) return 1 + MAX_UINT + uint;\n  if (uint > MAX_UINT) return uint - MAX_UINT;\n  return uint;\n}\n\nexport function getHashType(hash: Hash): HashType {\n  const hashExt = hash.slice(1, 5);\n\n  if (hashExt === AGENT_PREFIX) return HashType.AGENT;\n  if (hashExt === DNA_PREFIX) return HashType.DNA;\n  if (hashExt === DHTOP_PREFIX) return HashType.DHTOP;\n  if (hashExt === HEADER_PREFIX) return HashType.HEADER;\n  if (hashExt === ENTRY_PREFIX) return HashType.ENTRY;\n  throw new Error('Could not get hash type');\n}\n","export type GetOptions = {\n  strategy: GetStrategy;\n};\nexport type GetLinksOptions = {};\n\nexport enum GetStrategy {\n  Latest,\n  Contents,\n}\n\nexport interface QueryFilter {}\n","import {\n  Dictionary,\n  Hash,\n  Header,\n  getSysMetaValHeaderHash,\n  LinkMetaVal,\n  EntryDhtStatus,\n  EntryDetails,\n  NewEntryHeader,\n  SignedHeaderHashed,\n  DHTOpType,\n  Update,\n  Delete,\n  CreateLink,\n  DeleteLink,\n  HeaderType,\n  Create,\n  Metadata,\n  DHTOp,\n  ValidationReceipt,\n} from '@holochain-open-dev/core-types';\nimport { isEqual, uniq } from 'lodash-es';\nimport { hash, HashType } from '../../../processors/hash';\nimport { GetLinksResponse, Link } from '../cascade/types';\nimport {\n  CellState,\n  ValidationLimboStatus,\n  ValidationLimboValue,\n  IntegrationLimboValue,\n  IntegratedDhtOpsValue,\n} from '../state';\n\nexport function getValidationLimboDhtOps(\n  state: CellState,\n  statuses: ValidationLimboStatus[]\n): Dictionary<ValidationLimboValue> {\n  const pendingDhtOps: Dictionary<ValidationLimboValue> = {};\n\n  for (const dhtOpHash of Object.keys(state.validationLimbo)) {\n    const limboValue = state.validationLimbo[dhtOpHash];\n\n    if (statuses.includes(limboValue.status)) {\n      pendingDhtOps[dhtOpHash] = limboValue;\n    }\n  }\n\n  return pendingDhtOps;\n}\n\nexport const getValidationReceipts = (dhtOpHash: Hash) => (\n  state: CellState\n): ValidationReceipt[] => {\n  return state.validationReceipts[dhtOpHash]\n    ? Object.values(state.validationReceipts[dhtOpHash])\n    : [];\n};\n\nexport function pullAllIntegrationLimboDhtOps(\n  state: CellState\n): Dictionary<IntegrationLimboValue> {\n  const dhtOps = state.integrationLimbo;\n\n  state.integrationLimbo = {};\n\n  return dhtOps;\n}\n\nexport function getHeadersForEntry(\n  state: CellState,\n  entryHash: Hash\n): SignedHeaderHashed[] {\n  const entryMetadata = state.metadata.system_meta[entryHash];\n  if (!entryMetadata) return [];\n\n  return entryMetadata\n    .map(h => {\n      const hash = getSysMetaValHeaderHash(h);\n      if (hash) {\n        return state.CAS[hash];\n      }\n      return undefined;\n    })\n    .filter(header => !!header);\n}\n\nexport function getEntryDhtStatus(\n  state: CellState,\n  entryHash: Hash\n): EntryDhtStatus | undefined {\n  const meta = state.metadata.misc_meta[entryHash];\n\n  return meta\n    ? (meta as {\n        EntryStatus: EntryDhtStatus;\n      }).EntryStatus\n    : undefined;\n}\n\nexport function getEntryDetails(\n  state: CellState,\n  entry_hash: Hash\n): EntryDetails {\n  const entry = state.CAS[entry_hash];\n  const allHeaders = getHeadersForEntry(state, entry_hash);\n  const dhtStatus = getEntryDhtStatus(state, entry_hash);\n\n  const live_headers: Dictionary<SignedHeaderHashed<Create>> = {};\n  const updates: Dictionary<SignedHeaderHashed<Update>> = {};\n  const deletes: Dictionary<SignedHeaderHashed<Delete>> = {};\n\n  for (const header of allHeaders) {\n    const headerContent = (header as SignedHeaderHashed).header.content;\n\n    if (\n      (headerContent as Update).original_entry_address &&\n      (headerContent as Update).original_entry_address === entry_hash\n    ) {\n      updates[header.header.hash] = header as SignedHeaderHashed<Update>;\n    } else if (\n      (headerContent as Create).entry_hash &&\n      (headerContent as Create).entry_hash === entry_hash\n    ) {\n      live_headers[header.header.hash] = header as SignedHeaderHashed<Create>;\n    } else if ((headerContent as Delete).deletes_entry_address === entry_hash) {\n      deletes[header.header.hash] = header as SignedHeaderHashed<Delete>;\n    }\n  }\n\n  return {\n    entry,\n    headers: allHeaders,\n    entry_dht_status: dhtStatus as EntryDhtStatus,\n    updates: Object.values(updates),\n    deletes: Object.values(deletes),\n    rejected_headers: [], // TODO: after validation is implemented\n  };\n}\n\nexport function getHeaderModifiers(\n  state: CellState,\n  headerHash: Hash\n): {\n  updates: SignedHeaderHashed<Update>[];\n  deletes: SignedHeaderHashed<Delete>[];\n} {\n  const allModifiers = state.metadata.system_meta[headerHash];\n  if (!allModifiers)\n    return {\n      updates: [],\n      deletes: [],\n    };\n\n  const updates = allModifiers\n    .filter(m => (m as { Update: Hash }).Update)\n    .map(m => state.CAS[(m as { Update: Hash }).Update]);\n  const deletes = allModifiers\n    .filter(m => (m as { Delete: Hash }).Delete)\n    .map(m => state.CAS[(m as { Delete: Hash }).Delete]);\n\n  return {\n    updates,\n    deletes,\n  };\n}\n\nexport function getAllHeldEntries(state: CellState): Hash[] {\n  const newEntryHeaders = Object.values(state.integratedDHTOps)\n    .filter(dhtOpValue => dhtOpValue.op.type === DHTOpType.StoreEntry)\n    .map(dhtOpValue => dhtOpValue.op.header);\n\n  const allEntryHashes = newEntryHeaders.map(\n    h => (h.header.content as NewEntryHeader).entry_hash\n  );\n\n  return uniq(allEntryHashes);\n}\n\nexport function getAllHeldHeaders(state: CellState): Hash[] {\n  const headers = Object.values(state.integratedDHTOps)\n    .filter(dhtOpValue => dhtOpValue.op.type === DHTOpType.StoreElement)\n    .map(dhtOpValue => dhtOpValue.op.header);\n\n  const allHeaderHashes = headers.map(h => h.header.hash);\n\n  return uniq(allHeaderHashes);\n}\n\nexport function getAllAuthoredEntries(state: CellState): Hash[] {\n  const allHeaders = Object.values(state.authoredDHTOps).map(\n    dhtOpValue => dhtOpValue.op.header\n  );\n\n  const newEntryHeaders: SignedHeaderHashed<NewEntryHeader>[] = allHeaders.filter(\n    h => (h.header.content as NewEntryHeader).entry_hash\n  ) as SignedHeaderHashed<NewEntryHeader>[];\n\n  return newEntryHeaders.map(h => h.header.content.entry_hash);\n}\n\nexport function isHoldingEntry(state: CellState, entryHash: Hash): boolean {\n  return state.metadata.system_meta[entryHash] !== undefined;\n}\n\nexport function isHoldingElement(state: CellState, headerHash: Hash): boolean {\n  return state.metadata.misc_meta[headerHash] === 'StoreElement';\n}\n\nexport function isHoldingDhtOp(state: CellState, dhtOpHash: Hash): boolean {\n  return !!state.integratedDHTOps[dhtOpHash];\n}\n\nexport interface EntryDHTInfo {\n  details: EntryDetails;\n  links: LinkMetaVal[];\n}\n\nexport function getDhtShard(state: CellState): Dictionary<EntryDHTInfo> {\n  const heldEntries = getAllHeldEntries(state);\n\n  const dhtShard: Dictionary<EntryDHTInfo> = {};\n\n  for (const entryHash of heldEntries) {\n    dhtShard[entryHash] = {\n      details: getEntryDetails(state, entryHash),\n      links: getCreateLinksForEntry(state, entryHash),\n    };\n  }\n\n  return dhtShard;\n}\n\nexport function getLinksForEntry(\n  state: CellState,\n  entryHash: Hash\n): GetLinksResponse {\n  const linkMetaVals = getCreateLinksForEntry(state, entryHash);\n\n  const link_adds: SignedHeaderHashed<CreateLink>[] = [];\n  const link_removes: SignedHeaderHashed<DeleteLink>[] = [];\n\n  for (const value of linkMetaVals) {\n    const header = state.CAS[value.link_add_hash];\n\n    if (header) {\n      link_adds.push(header);\n    }\n\n    const removes = getRemovesOnLinkAdd(state, value.link_add_hash);\n\n    for (const remove of removes) {\n      const removeHeader = state.CAS[remove];\n      link_removes.push(removeHeader);\n    }\n  }\n\n  return {\n    link_adds,\n    link_removes,\n  };\n}\n\nexport function getCreateLinksForEntry(\n  state: CellState,\n  entryHash: Hash\n): LinkMetaVal[] {\n  return state.metadata.link_meta\n    .filter(({ key, value }) => isEqual(key.base, entryHash))\n    .map(({ key, value }) => value);\n}\n\nexport function getRemovesOnLinkAdd(\n  state: CellState,\n  link_add_hash: Hash\n): Hash[] {\n  const metadata = state.metadata.system_meta[link_add_hash];\n\n  if (!metadata) return [];\n\n  const removes: Hash[] = [];\n  for (const val of metadata) {\n    if ((val as { DeleteLink: Hash }).DeleteLink) {\n      removes.push((val as { DeleteLink: Hash }).DeleteLink);\n    }\n  }\n  return removes;\n}\n\nexport function getLiveLinks(\n  getLinksResponses: Array<GetLinksResponse>\n): Array<Link> {\n  // Map and flatten adds\n  const linkAdds: Dictionary<CreateLink | undefined> = {};\n  for (const responses of getLinksResponses) {\n    for (const linkAdd of responses.link_adds) {\n      linkAdds[linkAdd.header.hash] = linkAdd.header.content;\n    }\n  }\n\n  for (const responses of getLinksResponses) {\n    for (const linkRemove of responses.link_removes) {\n      const removedAddress = linkRemove.header.content.link_add_address;\n      if (linkAdds[removedAddress]) linkAdds[removedAddress] = undefined;\n    }\n  }\n\n  const resultingLinks: Link[] = [];\n\n  for (const liveLink of Object.values(linkAdds)) {\n    if (liveLink)\n      resultingLinks.push({\n        base: liveLink.base_address,\n        target: liveLink.target_address,\n        tag: liveLink.tag,\n      });\n  }\n\n  return resultingLinks;\n}\n\nexport function computeDhtStatus(\n  allHeadersForEntry: SignedHeaderHashed[]\n): {\n  entry_dht_status: EntryDhtStatus;\n  rejected_headers: SignedHeaderHashed[];\n} {\n  const aliveHeaders: Dictionary<SignedHeaderHashed | undefined> = {};\n  const rejected_headers: SignedHeaderHashed[] = [];\n\n  for (const header of allHeadersForEntry) {\n    if (header.header.content.type === HeaderType.Create) {\n      aliveHeaders[header.header.hash] = header;\n    }\n  }\n\n  for (const header of allHeadersForEntry) {\n    if (\n      header.header.content.type === HeaderType.Update ||\n      header.header.content.type === HeaderType.Delete\n    ) {\n      if (aliveHeaders[header.header.hash])\n        rejected_headers.push(\n          aliveHeaders[header.header.hash] as SignedHeaderHashed\n        );\n      aliveHeaders[header.header.hash] = undefined;\n    }\n  }\n\n  const isSomeHeaderAlive = Object.values(aliveHeaders).some(\n    header => header !== undefined\n  );\n\n  // TODO: add more cases\n  const entry_dht_status = isSomeHeaderAlive\n    ? EntryDhtStatus.Live\n    : EntryDhtStatus.Dead;\n\n  return {\n    entry_dht_status,\n    rejected_headers,\n  };\n}\n\nexport function hasDhtOpBeenProcessed(\n  state: CellState,\n  dhtOpHash: Hash\n): boolean {\n  return (\n    !!state.integrationLimbo[dhtOpHash] ||\n    !!state.integratedDHTOps[dhtOpHash] ||\n    !!state.validationLimbo[dhtOpHash]\n  );\n}\n\nexport function getIntegratedDhtOpsWithoutReceipt(\n  state: CellState\n): Dictionary<IntegratedDhtOpsValue> {\n  const needReceipt: Dictionary<IntegratedDhtOpsValue> = {};\n\n  for (const [dhtOpHash, integratedValue] of Object.entries(\n    state.integratedDHTOps\n  )) {\n    if (integratedValue.send_receipt) {\n      needReceipt[dhtOpHash] = integratedValue;\n    }\n  }\n  return needReceipt;\n}\n","import { shortest_arc_distance } from '../../processors/hash';\n\nexport interface DhtArc {\n  center_loc: number;\n  half_length: number;\n}\n\nexport function contains(dht_arc: DhtArc, location: number): boolean {\n  const do_hold_something = dht_arc.half_length !== 0;\n  const only_hold_self =\n    dht_arc.half_length === 1 && dht_arc.half_length === location;\n  const dist_as_array_length =\n    shortest_arc_distance(dht_arc.center_loc, location) + 1;\n\n  const within_range =\n    dht_arc.half_length > 1 && dist_as_array_length <= dht_arc.half_length;\n\n  return do_hold_something && (only_hold_self || within_range);\n}\n","import {\n  AgentPubKey,\n  DHTOp,\n  Dictionary,\n  Hash,\n  Metadata,\n  ValidationReceipt,\n} from '@holochain-open-dev/core-types';\nimport { location } from '../../processors/hash';\nimport { contains, DhtArc } from '../network/dht_arc';\n\nexport interface CellState {\n  dnaHash: Hash;\n  agentPubKey: AgentPubKey;\n  sourceChain: Array<Hash>;\n  CAS: Dictionary<any>;\n  metadata: Metadata; // For the moment only DHT shard\n  integratedDHTOps: Dictionary<IntegratedDhtOpsValue>; // Key is the hash of the DHT op\n  authoredDHTOps: Dictionary<AuthoredDhtOpsValue>; // Key is the hash of the DHT op\n  integrationLimbo: Dictionary<IntegrationLimboValue>; // Key is the hash of the DHT op\n  validationLimbo: Dictionary<ValidationLimboValue>; // Key is the hash of the DHT op\n  validationReceipts: Dictionary<Dictionary<ValidationReceipt>>; // Segmented by dhtOpHash/authorOfReceipt\n  badAgents: AgentPubKey[];\n}\n\nexport interface IntegratedDhtOpsValue {\n  op: DHTOp;\n  validation_status: ValidationStatus;\n  when_integrated: number;\n  /// Send a receipt to this author.\n  send_receipt: Boolean;\n}\n\nexport interface IntegrationLimboValue {\n  op: DHTOp;\n  validation_status: ValidationStatus;\n  /// Send a receipt to this author.\n  send_receipt: Boolean;\n}\n\nexport enum ValidationStatus {\n  Valid,\n  Rejected,\n  Abandoned,\n}\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/state/dht_op_integration.rs\nexport interface AuthoredDhtOpsValue {\n  op: DHTOp;\n  receipt_count: number;\n  last_publish_time: number | undefined;\n}\n\nexport enum ValidationLimboStatus {\n  Pending,\n  AwaitingSysDeps,\n  SysValidated,\n  AwaitingAppDeps,\n}\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/state/validation_db.rs#L24\nexport interface ValidationLimboValue {\n  status: ValidationLimboStatus;\n  op: DHTOp;\n  basis: Hash;\n  time_added: number;\n  last_try: number | undefined;\n  num_tries: number;\n  from_agent: AgentPubKey | undefined;\n  /// Send a receipt to this author.\n  send_receipt: Boolean;\n}\n\nexport function query_dht_ops(\n  integratedDHTOps: Dictionary<IntegratedDhtOpsValue>,\n  from: number | undefined,\n  to: number | undefined,\n  dht_arc: DhtArc\n): Array<Hash> {\n  const isDhtOpsInFilter = ([dhtOpHash, dhtOpValue]: [\n    Hash,\n    IntegratedDhtOpsValue\n  ]) => {\n    if (from && dhtOpValue.when_integrated < from) return false;\n    if (to && dhtOpValue.when_integrated > to) return false;\n    if (dht_arc && !contains(dht_arc, location(dhtOpHash))) return false;\n  };\n\n  const ops = Object.entries(integratedDHTOps).filter(isDhtOpsInFilter);\n  return ops.map(op => op[0]);\n}\n","import {\n  Create,\n  CreateLink,\n  Delete,\n  DeleteLink,\n  Element,\n  Entry,\n  EntryType,\n  Hash,\n  NewEntryHeader,\n  SignedHeaderHashed,\n  Update,\n} from '@holochain-open-dev/core-types';\nimport { P2pCell } from '../../..';\nimport { GetLinksOptions, GetOptions } from '../../../types';\nimport {\n  getLinksForEntry,\n  getHeaderModifiers,\n  getHeadersForEntry,\n  getEntryDetails,\n} from '../dht/get';\nimport { CellState, ValidationStatus } from '../state';\nimport {\n  GetEntryResponse,\n  GetElementResponse,\n  GetLinksResponse,\n} from './types';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain_cascade/src/authority.rs\nexport class Authority {\n  constructor(protected state: CellState, protected p2p: P2pCell) {}\n\n  public async handle_get_entry(\n    entry_hash: Hash,\n    options: GetOptions\n  ): Promise<GetEntryResponse | undefined> {\n    const entry = this.state.CAS[entry_hash];\n    if (!entry) return undefined;\n\n    const allHeaders = getHeadersForEntry(this.state, entry_hash);\n\n    const entryDetails = getEntryDetails(this.state, entry_hash);\n\n    const createHeader = allHeaders.find(\n      header => (header.header.content as Create).entry_type\n    );\n    let entry_type: EntryType | undefined = undefined;\n    if (createHeader)\n      entry_type = (createHeader.header.content as Create).entry_type;\n\n    return {\n      entry,\n      entry_type: entry_type as EntryType,\n      deletes: entryDetails.deletes as SignedHeaderHashed<Delete>[],\n      updates: entryDetails.updates as SignedHeaderHashed<Update>[],\n      live_headers: entryDetails.headers as SignedHeaderHashed<Create>[],\n    };\n  }\n\n  public async handle_get_element(\n    header_hash: Hash,\n    options: GetOptions\n  ): Promise<GetElementResponse | undefined> {\n    if (this.state.metadata.misc_meta[header_hash] !== 'StoreElement') {\n      return undefined;\n    }\n\n    const header = this.state.CAS[header_hash] as SignedHeaderHashed;\n    let maybe_entry: Entry | undefined = undefined;\n    let validation_status: ValidationStatus = ValidationStatus.Valid;\n\n    if (header) {\n      if (\n        (header as SignedHeaderHashed<NewEntryHeader>).header.content.entry_hash\n      ) {\n        const entryHash = (header as SignedHeaderHashed<NewEntryHeader>).header\n          .content.entry_hash;\n        maybe_entry = this.state.CAS[entryHash];\n      }\n    } else {\n      validation_status = ValidationStatus.Rejected;\n    }\n\n    const modifiers = getHeaderModifiers(this.state, header_hash);\n\n    return {\n      deletes: modifiers.deletes,\n      updates: modifiers.updates,\n      signed_header: header,\n      validation_status,\n      maybe_entry,\n    };\n  }\n\n  public async handle_get_links(\n    base_address: Hash,\n    options: GetLinksOptions\n  ): Promise<GetLinksResponse> {\n    return getLinksForEntry(this.state, base_address);\n  }\n}\n","import {\n  CreateLink,\n  Details,\n  DetailsType,\n  Dictionary,\n  Element,\n  ElementDetails,\n  Entry,\n  EntryDetails,\n  Hash,\n  NewEntryHeader,\n  SignedHeaderHashed,\n} from '@holochain-open-dev/core-types';\nimport { getHashType, HashType } from '../../../processors/hash';\nimport { GetLinksOptions, GetOptions, GetStrategy } from '../../../types';\nimport { P2pCell } from '../../network/p2p-cell';\nimport { Cell } from '../cell';\nimport { computeDhtStatus, getEntryDhtStatus, getLiveLinks } from '../dht/get';\nimport { CellState } from '../state';\nimport { Authority } from './authority';\nimport {\n  GetElementResponse,\n  GetEntryResponse,\n  GetLinksResponse,\n  Link,\n} from './types';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain_cascade/src/lib.rs#L1523\n\n// TODO: refactor Cascade when sqlite gets merged\n\nexport class Cascade {\n  constructor(protected state: CellState, protected p2p: P2pCell) {}\n\n  // TODO refactor when sqlite gets merged\n  public async retrieve_header(\n    hash: Hash,\n    options: GetOptions\n  ): Promise<SignedHeaderHashed | undefined> {\n    if (getHashType(hash) !== HashType.HEADER)\n      throw new Error(\n        `Trying to retrieve a header with a hash of another type`\n      );\n\n    const isPresent = this.state.CAS[hash];\n\n    // TODO only return local if GetOptions::content() is given\n    if (isPresent && options.strategy === GetStrategy.Contents) {\n      const signed_header = this.state.CAS[hash];\n      return signed_header;\n    }\n\n    const result = await this.p2p.get(hash, options);\n\n    if (result && (result as GetElementResponse).signed_header) {\n      return (result as GetElementResponse).signed_header;\n    } else return undefined;\n  }\n\n  public async retrieve_entry(\n    hash: Hash,\n    options: GetOptions\n  ): Promise<Entry | undefined> {\n    const hashType = getHashType(hash);\n    if (hashType !== HashType.ENTRY && hashType !== HashType.AGENT)\n      throw new Error(`Trying to retrieve a entry with a hash of another type`);\n\n    const isPresent = this.state.CAS[hash];\n\n    if (isPresent && options.strategy === GetStrategy.Contents) {\n      const entry = this.state.CAS[hash];\n      return entry;\n    }\n\n    const result = await this.p2p.get(hash, options);\n\n    if (result && (result as GetEntryResponse).entry) {\n      return (result as GetEntryResponse).entry;\n    } else return undefined;\n  }\n\n  public async dht_get(\n    hash: Hash,\n    options: GetOptions\n  ): Promise<Element | undefined> {\n    // TODO rrDHT arcs\n    const authority = new Authority(this.state, this.p2p);\n\n    const isPresent = this.state.CAS[hash];\n\n    // TODO only return local if GetOptions::content() is given\n    if (isPresent && options.strategy === GetStrategy.Contents) {\n      const hashType = getHashType(hash);\n\n      if (hashType === HashType.ENTRY) {\n        const entry = this.state.CAS[hash];\n        const signed_header = Object.values(this.state.CAS).find(\n          header =>\n            (header as SignedHeaderHashed).header &&\n            (header as SignedHeaderHashed<NewEntryHeader>).header.content\n              .entry_hash === hash\n        );\n\n        return {\n          entry,\n          signed_header,\n        };\n      }\n\n      if (hashType === HashType.HEADER) {\n        const signed_header = this.state.CAS[hash];\n        const entry = this.state.CAS[\n          (signed_header as SignedHeaderHashed<NewEntryHeader>).header.content\n            .entry_hash\n        ];\n        return {\n          entry,\n          signed_header,\n        };\n      }\n    }\n\n    const result = await this.p2p.get(hash, options);\n\n    if (!result) return undefined;\n\n    if ((result as GetElementResponse).signed_header) {\n      return {\n        entry: (result as GetElementResponse).maybe_entry,\n        signed_header: (result as GetElementResponse).signed_header,\n      };\n    } else {\n      return {\n        signed_header: (result as GetEntryResponse).live_headers[0],\n        entry: (result as GetEntryResponse).entry,\n      };\n    }\n  }\n\n  public async dht_get_details(\n    hash: Hash,\n    options: GetOptions\n  ): Promise<Details | undefined> {\n    if (getHashType(hash) === HashType.ENTRY) {\n      const entryDetails = await this.getEntryDetails(hash, options);\n\n      if (!entryDetails) return undefined;\n\n      return {\n        type: DetailsType.Entry,\n        content: entryDetails,\n      };\n    } else if (getHashType(hash) === HashType.HEADER) {\n      const elementDetails = await this.getHeaderDetails(hash, options);\n\n      if (!elementDetails) return undefined;\n\n      return {\n        type: DetailsType.Element,\n        content: elementDetails,\n      };\n    }\n\n    return undefined;\n  }\n\n  public async dht_get_links(\n    base_address: Hash,\n    options: GetLinksOptions\n  ): Promise<Link[]> {\n    // TODO: check if we are an authority\n\n    const linksResponses = await this.p2p.get_links(base_address, options);\n    return getLiveLinks(linksResponses);\n  }\n\n  async getEntryDetails(\n    entryHash: Hash,\n    options: GetOptions\n  ): Promise<EntryDetails | undefined> {\n    // TODO: check if we are an authority\n    const result = await this.p2p.get(entryHash, options);\n\n    if (!result) return undefined;\n    if ((result as GetEntryResponse).live_headers === undefined)\n      throw new Error('Unreachable');\n\n    const getEntryFull = result as GetEntryResponse;\n\n    const allHeaders = [\n      ...getEntryFull.deletes,\n      ...getEntryFull.updates,\n      ...getEntryFull.live_headers,\n    ];\n\n    const { rejected_headers, entry_dht_status } = computeDhtStatus(allHeaders);\n\n    return {\n      entry: getEntryFull.entry,\n      headers: getEntryFull.live_headers,\n      deletes: getEntryFull.deletes,\n      updates: getEntryFull.updates,\n      rejected_headers,\n      entry_dht_status,\n    };\n  }\n\n  async getHeaderDetails(\n    entryHash: Hash,\n    options: GetOptions\n  ): Promise<ElementDetails | undefined> {\n    const result = await this.p2p.get(entryHash, options);\n\n    if (!result) return undefined;\n    if ((result as GetElementResponse).validation_status === undefined)\n      throw new Error('Unreachable');\n\n    const response = result as GetElementResponse;\n\n    const element: Element = {\n      entry: response.maybe_entry,\n      signed_header: response.signed_header,\n    };\n\n    return {\n      element,\n      deletes: response.deletes,\n      updates: response.updates,\n      validation_status: response.validation_status,\n    };\n  }\n}\n","import {\n  Hash,\n  DHTOp,\n  getEntry,\n  DHTOpType,\n  HeaderType,\n  ChainStatus,\n  LinkMetaKey,\n  LinkMetaVal,\n  SysMetaVal,\n  EntryDhtStatus,\n  Header,\n  SignedHeaderHashed,\n  NewEntryHeader,\n  ValidationReceipt,\n} from '@holochain-open-dev/core-types';\nimport { isEqual } from 'lodash-es';\nimport {\n  ValidationLimboValue,\n  CellState,\n  IntegrationLimboValue,\n  IntegratedDhtOpsValue,\n} from '../state';\n\nimport { getHeadersForEntry } from './get';\n\nexport const putValidationLimboValue = (\n  dhtOpHash: Hash,\n  validationLimboValue: ValidationLimboValue\n) => (state: CellState) => {\n  state.validationLimbo[dhtOpHash] = validationLimboValue;\n};\n\nexport const putValidationReceipt = (\n  dhtOpHash: Hash,\n  validationReceipt: ValidationReceipt\n) => (state: CellState) => {\n  if (!state.validationReceipts[dhtOpHash])\n    state.validationReceipts[dhtOpHash] = {};\n\n  state.validationReceipts[dhtOpHash][\n    validationReceipt.validator\n  ] = validationReceipt;\n};\n\nexport const deleteValidationLimboValue = (dhtOpHash: Hash) => (\n  state: CellState\n) => {\n  delete state.validationLimbo[dhtOpHash];\n};\n\nexport const putIntegrationLimboValue = (\n  dhtOpHash: Hash,\n  integrationLimboValue: IntegrationLimboValue\n) => (state: CellState) => {\n  state.integrationLimbo[dhtOpHash] = integrationLimboValue;\n};\n\nexport const putDhtOpData = (dhtOp: DHTOp) => (state: CellState) => {\n  const headerHash = dhtOp.header.header.hash;\n  state.CAS[headerHash] = dhtOp.header;\n\n  const entry = getEntry(dhtOp);\n\n  if (entry) {\n    state.CAS[\n      (dhtOp.header.header.content as NewEntryHeader).entry_hash\n    ] = entry;\n  }\n};\n\nexport const putDhtOpMetadata = (dhtOp: DHTOp) => (state: CellState) => {\n  const headerHash = dhtOp.header.header.hash;\n\n  if (dhtOp.type === DHTOpType.StoreElement) {\n    state.metadata.misc_meta[headerHash] = 'StoreElement';\n  } else if (dhtOp.type === DHTOpType.StoreEntry) {\n    const entryHash = dhtOp.header.header.content.entry_hash;\n\n    if (dhtOp.header.header.content.type === HeaderType.Update) {\n      register_header_on_basis(headerHash, dhtOp.header)(state);\n      register_header_on_basis(entryHash, dhtOp.header)(state);\n    }\n\n    register_header_on_basis(entryHash, dhtOp.header)(state);\n    update_entry_dht_status(entryHash)(state);\n  } else if (dhtOp.type === DHTOpType.RegisterAgentActivity) {\n    state.metadata.misc_meta[headerHash] = {\n      ChainItem: dhtOp.header.header.content.timestamp,\n    };\n\n    state.metadata.misc_meta[dhtOp.header.header.content.author] = {\n      ChainStatus: ChainStatus.Valid,\n    };\n  } else if (\n    dhtOp.type === DHTOpType.RegisterUpdatedContent ||\n    dhtOp.type === DHTOpType.RegisterUpdatedElement\n  ) {\n    register_header_on_basis(\n      dhtOp.header.header.content.original_header_address,\n      dhtOp.header\n    )(state);\n    register_header_on_basis(\n      dhtOp.header.header.content.original_entry_address,\n      dhtOp.header\n    )(state);\n    update_entry_dht_status(dhtOp.header.header.content.original_entry_address)(\n      state\n    );\n  } else if (\n    dhtOp.type === DHTOpType.RegisterDeletedBy ||\n    dhtOp.type === DHTOpType.RegisterDeletedEntryHeader\n  ) {\n    register_header_on_basis(\n      dhtOp.header.header.content.deletes_address,\n      dhtOp.header\n    )(state);\n    register_header_on_basis(\n      dhtOp.header.header.content.deletes_entry_address,\n      dhtOp.header\n    )(state);\n\n    update_entry_dht_status(dhtOp.header.header.content.deletes_entry_address)(\n      state\n    );\n  } else if (dhtOp.type === DHTOpType.RegisterAddLink) {\n    const key: LinkMetaKey = {\n      base: dhtOp.header.header.content.base_address,\n      header_hash: headerHash,\n      tag: dhtOp.header.header.content.tag,\n      zome_id: dhtOp.header.header.content.zome_id,\n    };\n    const value: LinkMetaVal = {\n      link_add_hash: headerHash,\n      tag: dhtOp.header.header.content.tag,\n      target: dhtOp.header.header.content.target_address,\n      timestamp: dhtOp.header.header.content.timestamp,\n      zome_id: dhtOp.header.header.content.zome_id,\n    };\n    state.metadata.link_meta.push({ key, value });\n  } else if (dhtOp.type === DHTOpType.RegisterRemoveLink) {\n    const val: SysMetaVal = {\n      DeleteLink: headerHash,\n    };\n\n    putSystemMetadata(dhtOp.header.header.content.link_add_address, val)(state);\n  }\n};\n\nfunction is_header_alive(state: CellState, headerHash: Hash): boolean {\n  const dhtHeaders = state.metadata.system_meta[headerHash];\n  if (dhtHeaders) {\n    const isHeaderDeleted = !!dhtHeaders.find(\n      metaVal =>\n        (metaVal as {\n          Delete: Hash;\n        }).Delete\n    );\n    return !isHeaderDeleted;\n  }\n  return true;\n}\n\nconst update_entry_dht_status = (entryHash: Hash) => (state: CellState) => {\n  const headers = getHeadersForEntry(state, entryHash);\n\n  const entryIsAlive = headers.some(header =>\n    is_header_alive(state, header.header.hash)\n  );\n\n  state.metadata.misc_meta[entryHash] = {\n    EntryStatus: entryIsAlive ? EntryDhtStatus.Live : EntryDhtStatus.Dead,\n  };\n};\n\nexport const register_header_on_basis = (\n  basis: Hash,\n  header: SignedHeaderHashed\n) => (state: CellState) => {\n  let value: SysMetaVal | undefined;\n  const headerType = header.header.content.type;\n  if (headerType === HeaderType.Create) {\n    value = { NewEntry: header.header.hash };\n  } else if (headerType === HeaderType.Update) {\n    value = { Update: header.header.hash };\n  } else if (headerType === HeaderType.Delete) {\n    value = { Delete: header.header.hash };\n  }\n\n  if (value) {\n    putSystemMetadata(basis, value)(state);\n  }\n};\n\nexport const putSystemMetadata = (basis: Hash, value: SysMetaVal) => (\n  state: CellState\n) => {\n  if (!state.metadata.system_meta[basis]) {\n    state.metadata.system_meta[basis] = [];\n  }\n\n  if (!state.metadata.system_meta[basis].find(v => isEqual(v, value))) {\n    state.metadata.system_meta[basis].push(value);\n  }\n};\n\nexport const putDhtOpToIntegrated = (\n  dhtOpHash: Hash,\n  integratedValue: IntegratedDhtOpsValue\n) => (state: CellState) => {\n  state.integratedDHTOps[dhtOpHash] = integratedValue;\n};\n","import {\n  Element,\n  Hash,\n  NewEntryHeader,\n  SignedHeaderHashed,\n} from '@holochain-open-dev/core-types';\nimport { CellState } from '../state';\n\n/**\n * Returns the header hashes which don't have their DHTOps in the authoredDHTOps DB\n */\nexport function getNewHeaders(state: CellState): Array<Hash> {\n  const dhtOps = Object.values(state.authoredDHTOps);\n  const headerHashesAlreadyPublished = dhtOps.map(\n    dhtOp => dhtOp.op.header.header.hash\n  );\n  return state.sourceChain.filter(\n    headerHash => !headerHashesAlreadyPublished.includes(headerHash)\n  );\n}\n\nexport function getAllAuthoredHeaders(\n  state: CellState\n): Array<SignedHeaderHashed> {\n  return state.sourceChain.map(headerHash => state.CAS[headerHash]);\n}\n\nexport function getSourceChainElements(\n  state: CellState,\n  fromIndex: number,\n  toIndex: number\n): Element[] {\n  const elements: Element[] = [];\n\n  for (let i = fromIndex; i < toIndex; i++) {\n    const element = getSourceChainElement(state, i);\n    if (element) elements.push(element);\n  }\n\n  return elements;\n}\n\nexport function getSourceChainElement(\n  state: CellState,\n  index: number\n): Element | undefined {\n  const headerHash = state.sourceChain[index];\n  const signed_header: SignedHeaderHashed = state.CAS[headerHash];\n\n  let entry = undefined;\n  const entryHash = (signed_header.header.content as NewEntryHeader).entry_hash;\n  if (entryHash) {\n    entry = state.CAS[entryHash];\n  }\n\n  return {\n    entry,\n    signed_header,\n  };\n}\n","import {\n  AgentPubKey,\n  AppEntryType,\n  CellId,\n  DHTOp,\n  DHTOpType,\n  Entry,\n  EntryType,\n  Hash,\n  NewEntryHeader,\n} from '@holochain-open-dev/core-types';\nimport { hash, HashType } from '../../processors/hash';\nimport { Cell } from './cell';\n\nexport function hashEntry(entry: Entry): Hash {\n  if (entry.entry_type === 'Agent') return entry.content;\n  return hash(entry.content, HashType.ENTRY);\n}\n\nexport function getAppEntryType(\n  entryType: EntryType\n): AppEntryType | undefined {\n  if ((entryType as { App: AppEntryType }).App)\n    return (entryType as { App: AppEntryType }).App;\n  return undefined;\n}\n\nexport function getEntryTypeString(cell: Cell, entryType: EntryType): string {\n  const appEntryType = getAppEntryType(entryType);\n\n  if (appEntryType) {\n    const dna = cell.getSimulatedDna();\n    return dna.zomes[appEntryType.zome_id].entry_defs[appEntryType.id].id;\n  }\n\n  return entryType as string;\n}\n\nexport function getDHTOpBasis(dhtOp: DHTOp): Hash {\n  switch (dhtOp.type) {\n    case DHTOpType.StoreElement:\n      return dhtOp.header.header.hash;\n    case DHTOpType.StoreEntry:\n      return dhtOp.header.header.content.entry_hash;\n    case DHTOpType.RegisterUpdatedContent:\n      return dhtOp.header.header.content.original_entry_address;\n    case DHTOpType.RegisterUpdatedElement:\n      return dhtOp.header.header.content.original_header_address;\n    case DHTOpType.RegisterAgentActivity:\n      return dhtOp.header.header.content.author;\n    case DHTOpType.RegisterAddLink:\n      return dhtOp.header.header.content.base_address;\n    case DHTOpType.RegisterRemoveLink:\n      return dhtOp.header.header.content.base_address;\n    case DHTOpType.RegisterDeletedBy:\n      return dhtOp.header.header.content.deletes_address;\n    case DHTOpType.RegisterDeletedEntryHeader:\n      return dhtOp.header.header.content.deletes_entry_address;\n    default:\n      return (undefined as unknown) as Hash;\n  }\n}\n","import { CellState } from '../state';\nimport { Element } from '@holochain-open-dev/core-types';\nimport { hashEntry } from '../utils';\n\nexport const putElement = (element: Element) => (state: CellState): void => {\n  // Put header in CAS\n  const headerHash = element.signed_header.header.hash;\n  state.CAS[headerHash] = element.signed_header;\n\n  // Put entry in CAS if it exist\n  if (element.entry) {\n    const entryHash = hashEntry(element.entry);\n    state.CAS[entryHash] = element.entry;\n  }\n\n  state.sourceChain.push(headerHash);\n};\n","import {\n  Hash,\n  AgentPubKey,\n  Dna,\n  HeaderType,\n  CellId,\n  Element,\n  Dictionary,\n  DHTOp,\n  SignedHeaderHashed,\n  NewEntryHeader,\n  Delete,\n  ZomeCallCapGrant,\n  Update,\n  Entry,\n  CapSecret,\n} from '@holochain-open-dev/core-types';\nimport { CellState } from '../state';\nimport { getAllAuthoredHeaders } from './get';\n\nexport function getTipOfChain(cellState: CellState): Hash {\n  return cellState.sourceChain[cellState.sourceChain.length - 1];\n}\n\nexport function getAuthor(cellState: CellState): AgentPubKey {\n  return getHeaderAt(cellState, 0).header.content.author;\n}\n\nexport function getDnaHash(state: CellState): Hash {\n  const firstHeaderHash = state.sourceChain[state.sourceChain.length - 1];\n\n  const dna: SignedHeaderHashed<Dna> = state.CAS[firstHeaderHash];\n  return dna.header.content.hash;\n}\n\nexport function getHeaderAt(\n  cellState: CellState,\n  index: number\n): SignedHeaderHashed {\n  const headerHash = cellState.sourceChain[index];\n  return cellState.CAS[headerHash];\n}\n\nexport function getNextHeaderSeq(cellState: CellState): number {\n  return cellState.sourceChain.length;\n}\n\nexport function getElement(state: CellState, headerHash: Hash): Element {\n  const signed_header: SignedHeaderHashed = state.CAS[headerHash];\n\n  let entry;\n  if (\n    signed_header.header.content.type == HeaderType.Create ||\n    signed_header.header.content.type == HeaderType.Update\n  ) {\n    entry = state.CAS[signed_header.header.content.entry_hash];\n  }\n  return { signed_header, entry };\n}\n\nexport function getCellId(state: CellState): CellId {\n  const author = getAuthor(state);\n  const dna = getDnaHash(state);\n  return [dna, author];\n}\n\nexport function getNonPublishedDhtOps(state: CellState): Dictionary<DHTOp> {\n  const nonPublishedDhtOps: Dictionary<DHTOp> = {};\n  for (const dhtOpHash of Object.keys(state.authoredDHTOps)) {\n    const authoredValue = state.authoredDHTOps[dhtOpHash];\n    if (authoredValue.last_publish_time === undefined) {\n      nonPublishedDhtOps[dhtOpHash] = authoredValue.op;\n    }\n  }\n\n  return nonPublishedDhtOps;\n}\n\nexport function valid_cap_grant(\n  state: CellState,\n  zome: string,\n  fnName: string,\n  provenance: AgentPubKey,\n  secret: CapSecret | undefined\n): boolean {\n  if (provenance === getCellId(state)[1]) return true;\n\n  const aliveCapGrantsHeaders: Dictionary<\n    SignedHeaderHashed<NewEntryHeader>\n  > = {};\n\n  const allHeaders = getAllAuthoredHeaders(state);\n\n  for (const header of allHeaders) {\n    if (isCapGrant(header)) {\n      aliveCapGrantsHeaders[\n        header.header.hash\n      ] = header as SignedHeaderHashed<NewEntryHeader>;\n    }\n  }\n\n  for (const header of allHeaders) {\n    const headerContent = header.header.content;\n    if (\n      (headerContent as Update).original_header_address &&\n      aliveCapGrantsHeaders[(headerContent as Update).original_header_address]\n    ) {\n      delete aliveCapGrantsHeaders[\n        (headerContent as Update).original_header_address\n      ];\n    }\n    if (\n      (headerContent as Delete).deletes_address &&\n      aliveCapGrantsHeaders[(headerContent as Delete).deletes_address]\n    ) {\n      delete aliveCapGrantsHeaders[(headerContent as Delete).deletes_address];\n    }\n  }\n\n  const aliveCapGrants: Array<ZomeCallCapGrant> = Object.values(\n    aliveCapGrantsHeaders\n  ).map(\n    headerHash =>\n      (state.CAS[headerHash.header.content.entry_hash] as Entry).content\n  );\n\n  return !!aliveCapGrants.find(capGrant =>\n    isCapGrantValid(capGrant, zome, fnName, provenance, secret)\n  );\n}\n\nfunction isCapGrantValid(\n  capGrant: ZomeCallCapGrant,\n  zome: string,\n  fnName: string,\n  check_agent: AgentPubKey,\n  check_secret: CapSecret | undefined\n): boolean {\n  if (!capGrant.functions.find(fn => fn.fn_name === fnName && fn.zome === zome))\n    return false;\n\n  if (capGrant.access === 'Unrestricted') return true;\n  else if (\n    (capGrant.access as {\n      Assigned: { assignees: AgentPubKey[]; secret: CapSecret };\n    }).Assigned\n  ) {\n    return (capGrant.access as {\n      Assigned: {\n        secret: CapSecret;\n        assignees: AgentPubKey[];\n      };\n    }).Assigned.assignees.includes(check_agent);\n  } else {\n    return (\n      (capGrant.access as {\n        Transferable: { secret: CapSecret };\n      }).Transferable.secret === check_secret\n    );\n  }\n}\n\nfunction isCapGrant(header: SignedHeaderHashed): boolean {\n  const content = header.header.content;\n  return !!(\n    (content as NewEntryHeader).entry_hash &&\n    (content as NewEntryHeader).entry_type === 'CapGrant'\n  );\n}\n","import {\n  Hash,\n  now,\n  AgentPubKey,\n  Dna,\n  HeaderType,\n  AgentValidationPkg,\n  Entry,\n  EntryType,\n  Create,\n  Update,\n  SignedHeaderHashed,\n  Header,\n  CreateLink,\n  Delete,\n  DeleteLink,\n  Timestamp,\n} from '@holochain-open-dev/core-types';\nimport { hash, HashType } from '../../../processors/hash';\nimport { CellState } from '../state';\nimport { hashEntry } from '../utils';\nimport { getAuthor, getNextHeaderSeq, getTipOfChain } from './utils';\n\nexport function buildShh(header: Header): SignedHeaderHashed {\n  return {\n    header: {\n      content: header,\n      hash: hash(header, HashType.HEADER),\n    },\n    signature: Uint8Array.from([]),\n  };\n}\n\nexport function buildDna(dnaHash: Hash, agentId: AgentPubKey): Dna {\n  const dna: Dna = {\n    author: agentId,\n    hash: dnaHash,\n    timestamp: now(),\n    type: HeaderType.Dna,\n  };\n\n  return dna;\n}\n\nexport function buildAgentValidationPkg(\n  state: CellState,\n  membrane_proof: any\n): AgentValidationPkg {\n  const pkg: AgentValidationPkg = {\n    ...buildCommon(state),\n    membrane_proof,\n    type: HeaderType.AgentValidationPkg,\n  };\n  return pkg;\n}\n\nexport function buildCreate(\n  state: CellState,\n  entry: Entry,\n  entry_type: EntryType\n): Create {\n  const entry_hash = hashEntry(entry);\n\n  const create: Create = {\n    ...buildCommon(state),\n    entry_hash,\n    entry_type,\n    type: HeaderType.Create,\n  };\n  return create;\n}\n\nexport function buildCreateLink(\n  state: CellState,\n  zome_id: number,\n  base: Hash,\n  target: Hash,\n  tag: any\n): CreateLink {\n  const create_link: CreateLink = {\n    ...buildCommon(state),\n    base_address: base,\n    target_address: target,\n    tag,\n    zome_id,\n    type: HeaderType.CreateLink,\n  };\n  return create_link;\n}\n\nexport function buildUpdate(\n  state: CellState,\n  entry: Entry,\n  entry_type: EntryType,\n  original_entry_address: Hash,\n  original_header_address: Hash\n): Update {\n  const entry_hash = hashEntry(entry);\n\n  const update: Update = {\n    ...buildCommon(state),\n    entry_hash,\n    entry_type,\n    original_entry_address,\n    original_header_address,\n\n    type: HeaderType.Update,\n  };\n  return update;\n}\n\nexport function buildDelete(\n  state: CellState,\n  deletes_address: Hash,\n  deletes_entry_address: Hash\n): Delete {\n  const deleteHeader: Delete = {\n    ...buildCommon(state),\n    type: HeaderType.Delete,\n    deletes_address,\n    deletes_entry_address,\n  };\n  return deleteHeader;\n}\n\nexport function buildDeleteLink(\n  state: CellState,\n  base_address: Hash,\n  link_add_address: Hash\n): DeleteLink {\n  const deleteHeader: DeleteLink = {\n    ...buildCommon(state),\n    type: HeaderType.DeleteLink,\n    base_address,\n    link_add_address,\n  };\n  return deleteHeader;\n}\n/** Helpers */\n\nfunction buildCommon(state: CellState) {\n  const author = getAuthor(state);\n  const header_seq = getNextHeaderSeq(state);\n  const prev_header = getTipOfChain(state);\n  const timestamp = now();\n\n  return {\n    author,\n    header_seq,\n    prev_header,\n    timestamp,\n  };\n}\n","import { DHTOp, Dictionary } from '@holochain-open-dev/core-types';\nimport { Cell, CellState, Workflow } from '../../cell';\nimport { getNonPublishedDhtOps } from '../source-chain/utils';\nimport { getDHTOpBasis } from '../utils';\nimport { WorkflowReturn, WorkflowType, Workspace } from './workflows';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/publish_dht_ops_workflow.rs\nexport const publish_dht_ops = async (\n  workspace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const dhtOps = getNonPublishedDhtOps(workspace.state);\n\n  const dhtOpsByBasis: Dictionary<Dictionary<DHTOp>> = {};\n\n  for (const dhtOpHash of Object.keys(dhtOps)) {\n    const dhtOp = dhtOps[dhtOpHash];\n    const basis = getDHTOpBasis(dhtOp);\n\n    if (!dhtOpsByBasis[basis]) dhtOpsByBasis[basis] = {};\n\n    dhtOpsByBasis[basis][dhtOpHash] = dhtOp;\n  }\n\n  const promises = Object.entries(dhtOpsByBasis).map(\n    async ([basis, dhtOps]) => {\n      // Publish the operations\n      await workspace.p2p.publish(basis, dhtOps);\n\n      for (const dhtOpHash of Object.keys(dhtOps)) {\n        workspace.state.authoredDHTOps[\n          dhtOpHash\n        ].last_publish_time = Date.now();\n      }\n    }\n  );\n\n  await Promise.all(promises);\n\n  return {\n    result: undefined,\n    triggers: [],\n  };\n};\n\nexport type PublishDhtOpsWorkflow = Workflow<void, void>;\n\nexport function publish_dht_ops_task(): PublishDhtOpsWorkflow {\n  return {\n    type: WorkflowType.PUBLISH_DHT_OPS,\n    details: undefined,\n    task: worskpace => publish_dht_ops(worskpace),\n  };\n}\n","import { elementToDHTOps } from '@holochain-open-dev/core-types';\nimport { hash, HashType } from '../../../processors/hash';\nimport { Cell, CellState, Workflow } from '../../cell';\nimport { getNewHeaders } from '../source-chain/get';\nimport { getElement } from '../source-chain/utils';\nimport { publish_dht_ops_task } from './publish_dht_ops';\nimport { WorkflowReturn, WorkflowType, Workspace } from './workflows';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/produce_dht_ops_workflow.rs\nexport const produce_dht_ops = async (\n  worskpace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const newHeaderHashes = getNewHeaders(worskpace.state);\n\n  for (const newHeaderHash of newHeaderHashes) {\n    const element = getElement(worskpace.state, newHeaderHash);\n    const dhtOps = elementToDHTOps(element);\n\n    for (const dhtOp of dhtOps) {\n      const dhtOpHash = hash(dhtOp, HashType.DHTOP);\n      const dhtOpValue = {\n        op: dhtOp,\n        last_publish_time: undefined,\n        receipt_count: 0,\n      };\n\n      worskpace.state.authoredDHTOps[dhtOpHash] = dhtOpValue;\n    }\n  }\n\n  return {\n    result: undefined,\n    triggers: [publish_dht_ops_task()],\n  };\n};\n\nexport type ProduceDhtOpsWorkflow = Workflow<void, void>;\n\nexport function produce_dht_ops_task(): ProduceDhtOpsWorkflow {\n  return {\n    type: WorkflowType.PRODUCE_DHT_OPS,\n    details: undefined,\n    task: worskpace => produce_dht_ops(worskpace),\n  };\n}\n","import {\n  AgentPubKey,\n  AppEntryType,\n  Create,\n  Entry,\n  EntryType,\n  Hash,\n  Header,\n  HeaderType,\n  Metadata,\n  NewEntryHeader,\n  Signature,\n  Timestamp,\n  Update,\n} from '@holochain-open-dev/core-types';\nimport { EntryDef, SimulatedDna } from '../../../dnas/simulated-dna';\nimport { hashEntry } from '../utils';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/sys_validate.rs\n\n/// Verify the signature for this header\nexport async function verify_header_signature(\n  sig: Signature,\n  header: Header\n): Promise<boolean> {\n  return true; // TODO: actually implement signatures\n}\n\n/// Verify the author key was valid at the time\n/// of signing with dpki\n/// TODO: This is just a stub until we have dpki.\nexport async function author_key_is_valid(\n  author: AgentPubKey\n): Promise<boolean> {\n  return true;\n}\n\nexport function check_prev_header(header: Header): void {\n  if (header.type === HeaderType.Dna) return;\n  if (header.header_seq <= 0)\n    throw new Error(`Non-Dna Header contains a 0 or less header_seq`);\n  if (!header.prev_header)\n    throw new Error(\n      `Non-Dna Header doesn't contain a reference to the previous header`\n    );\n}\n\nexport function check_valid_if_dna(header: Header, metadata: Metadata): void {\n  if (metadata.misc_meta[header.author])\n    throw new Error(\n      `Trying to validate a Dna header when the agent already has committed other headers`\n    );\n}\n\nexport function check_chain_rollback() {\n  //TODO\n}\n\nexport function check_spam() {\n  //TODO\n}\n\nexport function check_prev_timestamp(\n  header: Header,\n  prev_header: Header\n): void {\n  const tsToMillis = (t: Timestamp) => t[0] * 1000000 + t[1];\n\n  if (tsToMillis(header.timestamp) <= tsToMillis(prev_header.timestamp)) {\n    // TODO: find out why this isn't working and fix it\n    /* throw new Error(\n      `New header must have a greater timestamp than any previous one`\n    ); */\n  }\n}\n\nexport function check_prev_seq(header: Header, prev_header: Header): void {\n  const prev_seq = (prev_header as Create).header_seq\n    ? (prev_header as Create).header_seq\n    : 0;\n  if (\n    !(\n      (header as Create).header_seq > 0 &&\n      (header as Create).header_seq === prev_seq + 1\n    )\n  )\n    throw new Error(\n      `Immediate following header must have as header_seq the previous one +1`\n    );\n}\n\nexport function check_entry_type(entry_type: EntryType, entry: Entry): void {\n  if (entry_type === 'Agent' && entry.entry_type === 'Agent') return;\n  if (entry_type === 'CapClaim' && entry.entry_type === 'CapClaim') return;\n  if (entry_type === 'CapGrant' && entry.entry_type === 'CapGrant') return;\n  if ((entry_type as { App: AppEntryType }).App && entry.entry_type === 'App')\n    return;\n  throw new Error(`Entry types don't match`);\n}\n\nexport function check_app_entry_type(\n  entry_type: AppEntryType,\n  simulated_dna: SimulatedDna\n): EntryDef {\n  const zome_index = entry_type.zome_id;\n  const entry_index = entry_type.id;\n\n  const zome = simulated_dna.zomes[zome_index];\n  if (!zome)\n    throw new Error(`Trying to validate an entry for a non existent zome`);\n\n  const entry_def = zome.entry_defs[entry_index];\n  if (!entry_def)\n    throw new Error(\n      `Trying to validate an entry which does not have any entry definition`\n    );\n\n  if (entry_def.visibility !== entry_type.visibility)\n    throw new Error(\n      `Trying to validate an entry with visibility not matching its definition`\n    );\n  return entry_def;\n}\n\nexport function check_not_private(entry_def: EntryDef): void {\n  if (entry_def.visibility === 'Private')\n    throw new Error(`Trying to validate as public a private entry type`);\n}\n\nexport function check_entry_hash(hash: Hash, entry: Entry): void {\n  if (hashEntry(entry) !== hash) throw new Error(`Entry hash is invalid`);\n}\n\nexport function check_new_entry_header(header: Header): void {\n  if (!(header.type === HeaderType.Create || header.type === HeaderType.Update))\n    throw new Error(\n      `A header refering a new entry is not of type Create or Update`\n    );\n}\n\nexport const MAX_ENTRY_SIZE = 16 * 1000 * 1000;\n\nexport function check_entry_size(entry: Entry): void {\n  if (JSON.stringify(entry.content).length > MAX_ENTRY_SIZE)\n    throw new Error(`Entry size exceeds the MAX_ENTRY_SIZE`);\n}\n\nexport const MAX_TAG_SIZE = 400;\n\nexport function check_tag_size(tag: string): void {\n  if (tag.length > MAX_TAG_SIZE)\n    throw new Error(`The given tag size exceeds the MAX_TAG_SIZE`);\n}\n\nexport function check_update_reference(\n  update: Update,\n  original_entry_header: NewEntryHeader\n): void {\n  if (\n    JSON.stringify(update.entry_type) !==\n    JSON.stringify(original_entry_header.entry_type)\n  )\n    throw new Error(`An entry must be updated to the same entry type`);\n}\n","import { Cell } from '../../cell';\nimport { ValidationLimboStatus } from '../state';\nimport { getValidationLimboDhtOps } from '../dht/get';\nimport { putValidationLimboValue } from '../dht/put';\nimport { app_validation_task } from './app_validation';\nimport { Workflow, WorkflowReturn, WorkflowType, Workspace } from './workflows';\nimport {\n  AppEntryType,\n  Create,\n  Element,\n  Entry,\n  Hash,\n  Header,\n  HeaderType,\n  NewEntryHeader,\n  Signature,\n  Update,\n} from '@holochain-open-dev/core-types';\nimport { P2pCell } from '../../network/p2p-cell';\nimport {\n  author_key_is_valid,\n  check_app_entry_type,\n  check_entry_hash,\n  check_entry_size,\n  check_entry_type,\n  check_new_entry_header,\n  check_not_private,\n  check_prev_header,\n  check_prev_seq,\n  check_prev_timestamp,\n  check_update_reference,\n  verify_header_signature,\n} from '../sys_validate';\nimport { GetStrategy } from '../../../types';\nimport { Cascade } from '../cascade/cascade';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/sys_validation_workflow.rs\nexport const sys_validation = async (\n  worskpace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const pendingDhtOps = getValidationLimboDhtOps(worskpace.state, [\n    ValidationLimboStatus.Pending,\n    ValidationLimboStatus.AwaitingSysDeps,\n  ]);\n\n  // TODO: actually validate\n  for (const dhtOpHash of Object.keys(pendingDhtOps)) {\n    const limboValue = pendingDhtOps[dhtOpHash];\n\n    limboValue.status = ValidationLimboStatus.SysValidated;\n\n    putValidationLimboValue(dhtOpHash, limboValue)(worskpace.state);\n  }\n\n  return {\n    result: undefined,\n    triggers: [app_validation_task()],\n  };\n};\n\nexport type SysValidationWorkflow = Workflow<void, void>;\n\nexport function sys_validation_task(): SysValidationWorkflow {\n  return {\n    type: WorkflowType.SYS_VALIDATION,\n    details: undefined,\n    task: worskpace => sys_validation(worskpace),\n  };\n}\n\nfunction validate_op() {}\n\nexport async function sys_validate_element(\n  element: Element,\n  workspace: Workspace,\n  network: P2pCell\n): Promise<void | DepsMissing> {\n  try {\n    const isNotCounterfeit = await counterfeit_check(\n      element.signed_header.signature,\n      element.signed_header.header.content\n    );\n    if (!isNotCounterfeit)\n      throw new Error(`Trying to validate counterfeited element`);\n  } catch (e) {\n    throw new Error(`Trying to validate counterfeited element`);\n  }\n\n  let maybeDepsMissing = await store_element(\n    element.signed_header.header.content,\n    workspace,\n    network\n  );\n  if (maybeDepsMissing) return maybeDepsMissing;\n\n  const entry_type = (element.signed_header.header.content as NewEntryHeader)\n    .entry_type;\n\n  if (\n    element.entry &&\n    (entry_type as {\n      App: AppEntryType;\n    }).App &&\n    (entry_type as {\n      App: AppEntryType;\n    }).App.visibility === 'Public'\n  ) {\n    maybeDepsMissing = await store_entry(\n      element.signed_header.header.content as NewEntryHeader,\n      element.entry,\n      workspace,\n      network\n    );\n    if (maybeDepsMissing) return maybeDepsMissing;\n  }\n\n  // TODO: implement register_* when cache is in place\n}\n\n/// Check if the op has valid signature and author.\n/// Ops that fail this check should be dropped.\nexport async function counterfeit_check(\n  signature: Signature,\n  header: Header\n): Promise<Boolean> {\n  return (\n    (await verify_header_signature(signature, header)) &&\n    (await author_key_is_valid(header.author))\n  );\n}\n\nexport interface DepsMissing {\n  depsHashes: Array<Hash>;\n}\n\nexport async function store_element(\n  header: Header,\n  workspace: Workspace,\n  network: P2pCell\n): Promise<void | DepsMissing> {\n  check_prev_header(header);\n\n  const prev_header_hash = (header as Create).prev_header;\n  if (prev_header_hash) {\n    const prev_header = await new Cascade(\n      workspace.state,\n      workspace.p2p\n    ).retrieve_header(prev_header_hash, {\n      strategy: GetStrategy.Contents,\n    });\n\n    if (!prev_header)\n      return {\n        depsHashes: [prev_header_hash],\n      };\n\n    check_prev_timestamp(header, prev_header.header.content);\n    check_prev_seq(header, prev_header.header.content);\n  }\n}\n\nexport async function store_entry(\n  header: NewEntryHeader,\n  entry: Entry,\n  workspace: Workspace,\n  network: P2pCell\n): Promise<void | DepsMissing> {\n  check_entry_type(header.entry_type, entry);\n  const appEntryType = (header.entry_type as { App: AppEntryType }).App;\n  if (appEntryType) {\n    const entry_def = check_app_entry_type(appEntryType, workspace.dna);\n    check_not_private(entry_def);\n  }\n\n  check_entry_hash(header.entry_hash, entry);\n  check_entry_size(entry);\n\n  if (header.type === HeaderType.Update) {\n    const signed_header = await new Cascade(\n      workspace.state,\n      workspace.p2p\n    ).retrieve_header(header.original_header_address, {\n      strategy: GetStrategy.Contents,\n    });\n    if (!signed_header) {\n      return {\n        depsHashes: [header.original_header_address],\n      };\n    }\n\n    update_check(header, signed_header.header.content);\n  }\n}\n\nfunction update_check(entry_update: Update, original_header: Header): void {\n  check_new_entry_header(original_header);\n\n  if (!(original_header as NewEntryHeader).entry_type)\n    throw new Error(`Trying to update a header that didn't create any entry`);\n\n  check_update_reference(entry_update, original_header as NewEntryHeader);\n}\n","import {\n  AgentPubKey,\n  DHTOp,\n  Hash,\n  ValidationReceipt,\n  ValidationStatus,\n} from '@holochain-open-dev/core-types';\nimport { uniq } from 'lodash-es';\nimport { distance, location, wrap } from '../../processors/hash';\nimport { CellState } from '../cell';\n\nexport function getClosestNeighbors(\n  peers: Hash[],\n  targetHash: Hash,\n  numNeighbors: number\n): Hash[] {\n  const sortedPeers = peers.sort((agentA: Hash, agentB: Hash) => {\n    const distanceA = distance(agentA, targetHash);\n    const distanceB = distance(agentB, targetHash);\n    return distanceA - distanceB;\n  });\n\n  return sortedPeers.slice(0, numNeighbors);\n}\n\nexport function getFarthestNeighbors(peers: Hash[], targetHash: Hash): Hash[] {\n  const sortedPeers = peers.sort((agentA: Hash, agentB: Hash) => {\n    return (\n      wrap(location(agentA) - location(targetHash)) -\n      wrap(location(agentB) - location(targetHash))\n    );\n  });\n\n  const index35 = Math.floor(sortedPeers.length * 0.35);\n  const index50 = Math.floor(sortedPeers.length / 2);\n  const index65 = Math.floor(sortedPeers.length * 0.65);\n\n  const neighbors = [\n    sortedPeers[index35],\n    sortedPeers[index50],\n    sortedPeers[index65],\n  ].filter(n => !!n);\n\n  return uniq(neighbors);\n}\n\nexport interface BadAction {\n  badAgents: AgentPubKey[];\n  op: DHTOp;\n  receipts: ValidationReceipt[];\n}\nexport function getBadActions(state: CellState): Array<BadAction> {\n  const badActions: Array<BadAction> = [];\n\n  for (const [dhtOpHash, receipts] of Object.entries(\n    state.validationReceipts\n  )) {\n    const myReceipt = receipts[state.agentPubKey];\n    if (myReceipt) {\n      const dhtOp = state.integratedDHTOps[dhtOpHash].op;\n      const badAction: BadAction = {\n        badAgents: [],\n        op: dhtOp,\n        receipts: Object.values(receipts),\n      };\n\n      if (myReceipt.validation_status === ValidationStatus.Rejected) {\n        badAction.badAgents.push(dhtOp.header.header.content.author);\n      }\n      for (const [validatorAgent, receipt] of Object.entries(receipts)) {\n        if (receipt.validation_status !== myReceipt.validation_status) {\n          badAction.badAgents.push(receipt.validator);\n        }\n      }\n\n      if (badAction.badAgents.length > 0) {\n        badActions.push(badAction);\n      }\n    }\n  }\n  return badActions;\n}\n\nexport function getBadAgents(state: CellState): AgentPubKey[] {\n  const actions = getBadActions(state);\n\n  const badAgents: AgentPubKey[] = actions.reduce(\n    (acc, next) => [...acc, ...next.badAgents],\n    [] as string[]\n  );\n\n  return uniq(badAgents);\n}\n","import { Cell, Workflow } from '../../cell';\nimport { CellState, IntegratedDhtOpsValue, ValidationStatus } from '../state';\nimport { getIntegratedDhtOpsWithoutReceipt } from '../dht/get';\nimport { putDhtOpToIntegrated, putValidationReceipt } from '../dht/put';\nimport { WorkflowReturn, WorkflowType, Workspace } from './workflows';\nimport { now, ValidationReceipt } from '@holochain-open-dev/core-types';\nimport { getBadAgents } from '../../network/utils';\nimport { uniq } from 'lodash-es';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/integrate_dht_ops_workflow.rs\nexport const validation_receipt = async (\n  workspace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const integratedOpsWithoutReceipt = getIntegratedDhtOpsWithoutReceipt(\n    workspace.state\n  );\n  const pretendIsValid =\n    workspace.badAgentConfig &&\n    workspace.badAgentConfig.pretend_invalid_elements_are_valid;\n\n  for (const [dhtOpHash, integratedValue] of Object.entries(\n    integratedOpsWithoutReceipt\n  )) {\n    const receipt: ValidationReceipt = {\n      dht_op_hash: dhtOpHash,\n      validation_status: pretendIsValid\n        ? ValidationStatus.Valid\n        : integratedValue.validation_status,\n      validator: workspace.state.agentPubKey,\n      when_integrated: now(),\n    };\n\n    putValidationReceipt(dhtOpHash, receipt)(workspace.state);\n\n    const badAgents = getBadAgents(workspace.state);\n    const beforeCount = workspace.state.badAgents.length;\n\n    workspace.state.badAgents = uniq([\n      ...workspace.state.badAgents,\n      ...badAgents,\n    ]);\n\n    if (beforeCount !== badAgents.length) {\n      workspace.p2p.syncNeighbors();\n    }\n\n    integratedValue.send_receipt = false;\n\n    putDhtOpToIntegrated(dhtOpHash, integratedValue);\n  }\n\n  return {\n    result: undefined,\n    triggers: [],\n  };\n};\n\nexport type ValidationReceiptWorkflow = Workflow<void, void>;\n\nexport function validation_receipt_task(): ValidationReceiptWorkflow {\n  return {\n    type: WorkflowType.VALIDATION_RECEIPT,\n    details: undefined,\n    task: worskpace => validation_receipt(worskpace),\n  };\n}\n","import { SimulatedDna } from '../../../dnas/simulated-dna';\nimport { BadAgentConfig } from '../../bad-agent';\nimport { P2pCell } from '../../network/p2p-cell';\nimport { CellState } from '../state';\nimport { app_validation_task } from './app_validation';\nimport { integrate_dht_ops_task } from './integrate_dht_ops';\nimport { produce_dht_ops_task } from './produce_dht_ops';\nimport { publish_dht_ops_task } from './publish_dht_ops';\nimport { sys_validation_task } from './sys_validation';\nimport { validation_receipt_task } from './validation_receipt';\n\nexport interface Workspace {\n  state: CellState;\n  p2p: P2pCell;\n  dna: SimulatedDna;\n  badAgentConfig?: BadAgentConfig & { counterfeit_dna?: SimulatedDna };\n}\n\nexport interface Workflow<D, R> {\n  type: WorkflowType;\n  details: D;\n  task: (worskpace: Workspace) => Promise<WorkflowReturn<R>>;\n}\nexport type WorkflowReturn<R> = {\n  result: R;\n  triggers: Array<Workflow<any, any>>;\n};\n\nexport enum WorkflowType {\n  CALL_ZOME = 'Call Zome Function',\n  SYS_VALIDATION = 'System Validation',\n  PUBLISH_DHT_OPS = 'Publish DHT Ops',\n  PRODUCE_DHT_OPS = 'Produce DHT Ops',\n  APP_VALIDATION = 'App Validation',\n  AGENT_VALIDATION = 'Validate Agent',\n  INTEGRATE_DHT_OPS = 'Integrate DHT Ops',\n  GENESIS = 'Genesis',\n  INCOMING_DHT_OPS = 'Incoming DHT Ops',\n  VALIDATION_RECEIPT = 'Validation Receipt',\n}\n\nexport function workflowPriority(workflowType: WorkflowType): number {\n  switch (workflowType) {\n    case WorkflowType.GENESIS:\n      return 0;\n    case WorkflowType.CALL_ZOME:\n      return 1;\n    default:\n      return 10;\n  }\n}\n\nexport function triggeredWorkflowFromType(\n  type: WorkflowType\n): Workflow<any, any> {\n  switch (type) {\n    case WorkflowType.APP_VALIDATION:\n      return app_validation_task();\n    case WorkflowType.INTEGRATE_DHT_OPS:\n      return integrate_dht_ops_task();\n    case WorkflowType.PRODUCE_DHT_OPS:\n      return produce_dht_ops_task();\n    case WorkflowType.PUBLISH_DHT_OPS:\n      return publish_dht_ops_task();\n    case WorkflowType.SYS_VALIDATION:\n      return sys_validation_task();\n    case WorkflowType.VALIDATION_RECEIPT:\n      return validation_receipt_task();\n    default:\n      throw new Error('Trying to trigger a workflow that cannot be triggered');\n  }\n}\n","import { Cell, Workflow } from '..';\nimport { CellState, IntegratedDhtOpsValue, ValidationStatus } from '../state';\nimport { pullAllIntegrationLimboDhtOps } from '../dht/get';\nimport {\n  putDhtOpData,\n  putDhtOpMetadata,\n  putDhtOpToIntegrated,\n} from '../dht/put';\nimport { WorkflowReturn, WorkflowType, Workspace } from './workflows';\nimport { validation_receipt_task } from './validation_receipt';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/integrate_dht_ops_workflow.rs\nexport const integrate_dht_ops = async (\n  worskpace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const opsToIntegrate = pullAllIntegrationLimboDhtOps(worskpace.state);\n\n  for (const dhtOpHash of Object.keys(opsToIntegrate)) {\n    const integrationLimboValue = opsToIntegrate[dhtOpHash];\n\n    const dhtOp = integrationLimboValue.op;\n\n    if (integrationLimboValue.validation_status === ValidationStatus.Valid) {\n      putDhtOpData(dhtOp)(worskpace.state);\n      putDhtOpMetadata(dhtOp)(worskpace.state);\n    } else if (\n      integrationLimboValue.validation_status === ValidationStatus.Rejected\n    ) {\n      putDhtOpData(dhtOp)(worskpace.state);\n    }\n\n    const value: IntegratedDhtOpsValue = {\n      op: dhtOp,\n      validation_status: integrationLimboValue.validation_status,\n      when_integrated: Date.now(),\n      send_receipt: integrationLimboValue.send_receipt\n    };\n\n    putDhtOpToIntegrated(dhtOpHash, value)(worskpace.state);\n  }\n  return {\n    result: undefined,\n    triggers: [validation_receipt_task()],\n  };\n};\n\nexport type IntegrateDhtOpsWorkflow = Workflow<void, void>;\n\nexport function integrate_dht_ops_task(): IntegrateDhtOpsWorkflow {\n  return {\n    type: WorkflowType.INTEGRATE_DHT_OPS,\n    details: undefined,\n    task: worskpace => integrate_dht_ops(worskpace),\n  };\n}\n","import {\n  Entry,\n  EntryType,\n  Hash,\n  Element,\n} from '@holochain-open-dev/core-types';\nimport {\n  buildCreate,\n  buildShh,\n} from '../../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../../cell/source-chain/put';\nimport { HostFnWorkspace } from '../../../host-fn';\n\nexport function common_create(\n  worskpace: HostFnWorkspace,\n  entry: Entry,\n  entry_type: EntryType\n): Hash {\n  const create = buildCreate(worskpace.state, entry, entry_type);\n\n  const element: Element = {\n    signed_header: buildShh(create),\n    entry,\n  };\n  putElement(element)(worskpace.state);\n  \n  return element.signed_header.header.hash;\n}\n","import {\n  Entry,\n  Hash,\n  ZomeCallCapGrant,\n  AgentPubKey,\n  CapSecret,\n} from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_create } from './common/create';\n\nexport type CreateCapGrantFn = (cap_grant: ZomeCallCapGrant) => Promise<Hash>;\n\n// Creates a new Create header and its entry in the source chain\nexport const create_cap_grant: HostFn<CreateCapGrantFn> = (\n  worskpace: HostFnWorkspace\n): CreateCapGrantFn => async (cap_grant: ZomeCallCapGrant): Promise<Hash> => {\n  if (\n    (cap_grant.access as {\n      Assigned: {\n        secret: CapSecret;\n        assignees: AgentPubKey[];\n      };\n    }).Assigned.assignees.find(a => !!a && typeof a !== 'string')\n  ) {\n    throw new Error('Tried to assign a capability to an invalid agent');\n  }\n\n  const entry: Entry = { entry_type: 'CapGrant', content: cap_grant };\n\n  return common_create(worskpace, entry, 'CapGrant');\n};\n","import { Entry, Hash } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_create } from './common/create';\n\nexport type CreateEntryFn = (args: {\n  content: any;\n  entry_def_id: string;\n}) => Promise<Hash>;\n\n// Creates a new Create header and its entry in the source chain\nexport const create_entry: HostFn<CreateEntryFn> = (\n  workspace: HostFnWorkspace,\n  zome_index: number\n): CreateEntryFn => async (args: {\n  content: any;\n  entry_def_id: string;\n}): Promise<Hash> => {\n  const entry: Entry = { entry_type: 'App', content: args.content };\n\n  const entryDefIndex = workspace.dna.zomes[zome_index].entry_defs.findIndex(\n    entry_def => entry_def.id === args.entry_def_id\n  );\n  if (entryDefIndex < 0) {\n    throw new Error(\n      `Given entry def id ${args.entry_def_id} does not exist in this zome`\n    );\n  }\n\n  const entry_type = {\n    App: {\n      id: entryDefIndex,\n      zome_id: zome_index,\n      visibility:\n        workspace.dna.zomes[zome_index].entry_defs[entryDefIndex].visibility,\n    },\n  };\n\n  return common_create(workspace, entry, entry_type);\n};\n","import { Element, Hash } from '@holochain-open-dev/core-types';\nimport { Cell } from '../../../cell';\nimport {\n  buildCreateLink,\n  buildShh,\n} from '../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../cell/source-chain/put';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\n\nexport type CreateLinkFn = (args: {\n  base: Hash;\n  target: Hash;\n  tag: any;\n}) => Promise<Hash>;\n\n// Creates a new CreateLink header in the source chain\nexport const create_link: HostFn<CreateLinkFn> = (\n  worskpace: HostFnWorkspace,\n  zome_id: number\n): CreateLinkFn => async (args): Promise<Hash> => {\n  const createLink = buildCreateLink(\n    worskpace.state,\n    zome_id,\n    args.base,\n    args.target,\n    args.tag\n  );\n\n  const element: Element = {\n    signed_header: buildShh(createLink),\n    entry: undefined,\n  };\n  putElement(element)(worskpace.state);\n\n  return element.signed_header.header.hash;\n};\n","import { Hash, Element, NewEntryHeader } from '@holochain-open-dev/core-types';\nimport { GetStrategy } from '../../../../../types';\nimport {\n  buildDelete,\n  buildShh,\n} from '../../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../../cell/source-chain/put';\nimport { HostFnWorkspace } from '../../../host-fn';\n\nexport async function common_delete(\n  worskpace: HostFnWorkspace,\n  header_hash: Hash\n): Promise<Hash> {\n  const headerToDelete = await worskpace.cascade.retrieve_header(header_hash, {\n    strategy: GetStrategy.Contents,\n  });\n\n  if (!headerToDelete) throw new Error('Could not find element to be deleted');\n\n  const deletesEntryAddress = (headerToDelete.header.content as NewEntryHeader)\n    .entry_hash;\n\n  if (!deletesEntryAddress)\n    throw new Error(`Trying to delete an element with no entry`);\n\n  const deleteHeader = buildDelete(\n    worskpace.state,\n    header_hash,\n    deletesEntryAddress\n  );\n\n  const element: Element = {\n    signed_header: buildShh(deleteHeader),\n    entry: undefined,\n  };\n  putElement(element)(worskpace.state);\n\n  return element.signed_header.header.hash;\n}\n","import { Hash } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_delete } from './common/delete';\n\nexport type DeleteCapGrantFn = (deletes_address: Hash) => Promise<Hash>;\n\n// Creates a new Create header and its entry in the source chain\nexport const delete_cap_grant: HostFn<DeleteCapGrantFn> = (\n  worskpace: HostFnWorkspace\n): DeleteCapGrantFn => async (deletes_address): Promise<Hash> => {\n  return common_delete(worskpace, deletes_address);\n};\n","import { Hash } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_delete } from './common/delete';\n\nexport type DeleteEntryFn = (deletes_address: Hash) => Promise<Hash>;\n\n// Creates a new Create header and its entry in the source chain\nexport const delete_entry: HostFn<DeleteEntryFn> = (\n  worskpace: HostFnWorkspace\n): DeleteEntryFn => async (deletes_address: Hash): Promise<Hash> => {\n  return common_delete(worskpace, deletes_address);\n};\n","import { Hash, Element, CreateLink } from '@holochain-open-dev/core-types';\nimport { GetStrategy } from '../../../../types';\nimport {\n  buildDeleteLink,\n  buildShh,\n} from '../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../cell/source-chain/put';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\n\nexport type DeleteLinkFn = (deletes_address: Hash) => Promise<Hash>;\n\n// Creates a new Create header and its entry in the source chain\nexport const delete_link: HostFn<DeleteLinkFn> = (\n  worskpace: HostFnWorkspace\n): DeleteLinkFn => async (deletes_address): Promise<Hash> => {\n  const elementToDelete = await worskpace.cascade.dht_get(deletes_address, {\n    strategy: GetStrategy.Contents,\n  });\n  \n  if (!elementToDelete) throw new Error('Could not find element to be deleted');\n\n  const baseAddress = (elementToDelete.signed_header.header\n    .content as CreateLink).base_address;\n\n  if (!baseAddress)\n    throw new Error('Header for the given hash is not a CreateLink header');\n\n  const deleteHeader = buildDeleteLink(\n    worskpace.state,\n    baseAddress,\n    deletes_address\n  );\n\n  const element: Element = {\n    signed_header: buildShh(deleteHeader),\n    entry: undefined,\n  };\n  putElement(element)(worskpace.state);\n\n  return element.signed_header.header.hash;\n};\n","import {\n  Hash,\n  Element,\n  NewEntryHeader,\n  Entry,\n  EntryType,\n} from '@holochain-open-dev/core-types';\nimport { GetStrategy } from '../../../../../types';\nimport {\n  buildDelete,\n  buildShh,\n  buildUpdate,\n} from '../../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../../cell/source-chain/put';\nimport { HostFnWorkspace } from '../../../host-fn';\n\nexport async function common_update(\n  worskpace: HostFnWorkspace,\n  original_header_hash: Hash,\n  entry: Entry,\n  entry_type: EntryType\n): Promise<Hash> {\n  const headerToUpdate = await worskpace.cascade.retrieve_header(\n    original_header_hash,\n    {\n      strategy: GetStrategy.Contents,\n    }\n  );\n\n  if (!headerToUpdate) throw new Error('Could not find element to be updated');\n\n  const original_entry_hash = (headerToUpdate.header.content as NewEntryHeader)\n    .entry_hash;\n  if (!original_entry_hash)\n    throw new Error(`Trying to update an element with no entry`);\n\n  const updateHeader = buildUpdate(\n    worskpace.state,\n    entry,\n    entry_type,\n    original_entry_hash,\n    original_header_hash\n  );\n\n  const element: Element = {\n    signed_header: buildShh(updateHeader),\n    entry,\n  };\n  putElement(element)(worskpace.state);\n\n  return element.signed_header.header.hash;\n}\n","import { Entry, Hash } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_update } from './common/update';\n\nexport type UpdateEntryFn = (\n  original_header_address: Hash,\n  newEntry: {\n    content: any;\n    entry_def_id: string;\n  }\n) => Promise<Hash>;\n\n// Creates a new Create header and its entry in the source chain\nexport const update_entry: HostFn<UpdateEntryFn> = (\n  workspace: HostFnWorkspace,\n  zome_index: number\n): UpdateEntryFn => async (\n  original_header_address: Hash,\n  newEntry: {\n    content: any;\n    entry_def_id: string;\n  }\n): Promise<Hash> => {\n  const entry: Entry = { entry_type: 'App', content: newEntry.content };\n\n  const entryDefIndex = workspace.dna.zomes[zome_index].entry_defs.findIndex(\n    entry_def => entry_def.id === newEntry.entry_def_id\n  );\n  if (entryDefIndex < 0) {\n    throw new Error(\n      `Given entry def id ${newEntry.entry_def_id} does not exist in this zome`\n    );\n  }\n\n  const entry_type = {\n    App: {\n      id: entryDefIndex,\n      zome_id: zome_index,\n      visibility:\n        workspace.dna.zomes[zome_index].entry_defs[entryDefIndex].visibility,\n    },\n  };\n\n  return common_update(workspace, original_header_address, entry, entry_type);\n};\n","import { AgentPubKey } from '@holochain-open-dev/core-types';\nimport { getCellId } from '../../cell/source-chain/utils';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport interface AgentInfo {\n  agent_initial_pubkey: AgentPubKey;\n  agent_latest_pubkey: AgentPubKey;\n}\n\nexport type AgentInfoFn = () => Promise<AgentInfo>;\n\n// Creates a new Create header and its entry in the source chain\nexport const agent_info: HostFn<AgentInfoFn> = (\n  worskpace: HostFnWorkspace\n): AgentInfoFn => async (): Promise<AgentInfo> => {\n  const cellId = getCellId(worskpace.state);\n  const agentPubKey = cellId[1];\n\n  return {\n    agent_initial_pubkey: agentPubKey,\n    agent_latest_pubkey: agentPubKey,\n  };\n};\n","import { AgentPubKey, CapSecret } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type CallRemoteFn = (args: {\n  agent: AgentPubKey;\n  zome: string;\n  fn_name: string;\n  cap_secret: CapSecret | undefined;\n  payload: any;\n}) => Promise<any>;\n\n// Creates a new Create header and its entry in the source chain\nexport const call_remote: HostFn<CallRemoteFn> = (\n  workspace: HostFnWorkspace\n): CallRemoteFn => async (args): Promise<any> => {\n  return workspace.p2p.call_remote(\n    args.agent,\n    args.zome,\n    args.fn_name,\n    args.cap_secret,\n    args.payload\n  );\n};\n","import { Entry, Hash, Element } from '@holochain-open-dev/core-types';\nimport { GetOptions, GetStrategy } from '../../../types';\nimport { Cell } from '../../cell';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type GetFn = (\n  args: Hash,\n  options?: GetOptions\n) => Promise<Element | undefined>;\n\n// Creates a new Create header and its entry in the source chain\nexport const get: HostFn<GetFn> = (workspace: HostFnWorkspace): GetFn => async (\n  hash,\n  options\n): Promise<Element | undefined> => {\n  if (!hash) throw new Error(`Cannot get with undefined hash`);\n\n  options = options || { strategy: GetStrategy.Contents };\n\n  return workspace.cascade.dht_get(hash, options);\n};\n","import { Entry, Hash, Element, Details } from '@holochain-open-dev/core-types';\nimport { GetOptions, GetStrategy } from '../../../types';\nimport { Cell } from '../../cell';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type GetDetailsFn = (\n  args: Hash,\n  options?: GetOptions\n) => Promise<Details | undefined>;\n\n// Creates a new Create header and its entry in the source chain\nexport const get_details: HostFn<GetDetailsFn> = (\n  workspace: HostFnWorkspace\n): GetDetailsFn => async (hash, options): Promise<Details | undefined> => {\n  if (!hash) throw new Error(`Cannot get with undefined hash`);\n\n  options = options || { strategy: GetStrategy.Contents };\n\n  return workspace.cascade.dht_get_details(hash, options);\n};\n","import { Entry, Hash, Element } from '@holochain-open-dev/core-types';\nimport { GetLinksOptions, GetOptions, GetStrategy } from '../../../types';\nimport { Link } from '../../cell/cascade/types';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type GetLinksFn = (\n  base_address: Hash,\n  options?: GetLinksOptions\n) => Promise<Link[] | undefined>;\n\n// Creates a new Create header and its entry in the source chain\nexport const get_links: HostFn<GetLinksFn> = (\n  workspace: HostFnWorkspace\n): GetLinksFn => async (base_address, options): Promise<Link[]> => {\n  if (!base_address) throw new Error(`Cannot get with undefined hash`);\n\n  options = options || { strategy: GetStrategy.Contents };\n\n  return workspace.cascade.dht_get_links(base_address, options);\n};\n","import { Entry, Hash } from '@holochain-open-dev/core-types';\nimport { hashEntry } from '../../cell/utils';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type HashEntryFn = (args: { content: any }) => Promise<Hash>;\n\n// Creates a new Create header and its entry in the source chain\nexport const hash_entry: HostFn<HashEntryFn> = (\n  worskpace: HostFnWorkspace\n): HashEntryFn => async (args): Promise<Hash> => {\n  const entry: Entry = { entry_type: 'App', content: args.content };\n  return hashEntry(entry);\n};\n","import { Element, NewEntryHeader } from '@holochain-open-dev/core-types';\nimport { QueryFilter } from '../../../types';\nimport { getAllAuthoredHeaders } from '../../cell/source-chain/get';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type QueryFn = (filter: QueryFilter) => Promise<Array<Element>>;\n\n// Creates a new Create header and its entry in the source chain\nexport const query: HostFn<QueryFn> = (\n  workspace: HostFnWorkspace\n): QueryFn => async (filter): Promise<Array<Element>> => {\n  const authoredHeaders = getAllAuthoredHeaders(workspace.state);\n\n  return authoredHeaders.map(header => {\n    let entry = undefined;\n\n    if ((header.header.content as NewEntryHeader).entry_hash) {\n      entry =\n        workspace.state.CAS[\n          (header.header.content as NewEntryHeader).entry_hash\n        ];\n    }\n\n    return {\n      signed_header: header,\n      entry,\n    };\n  });\n};\n","import { Hdk } from './context';\n\nexport const ensure = (hdk: Hdk) => async (path: string): Promise<void> => {\n  const headerHash = await hdk.create_entry({\n    content: path,\n    entry_def_id: 'path',\n  });\n\n  const components = path.split('.');\n\n  if (components.length > 1) {\n    components.splice(components.length - 1, 1);\n    const parent = components.join('.');\n\n    await ensure(hdk)(parent);\n\n    const pathHash = await hdk.hash_entry({ content: path });\n    const parentHash = await hdk.hash_entry({ content: parent });\n\n    await hdk.create_link({ base: parentHash, target: pathHash, tag: path });\n  }\n};\n\nexport interface Path {\n  ensure: (path: string) => Promise<void>;\n}\n","import { HostFnWorkspace } from './host-fn';\nimport {\n  CreateCapGrantFn,\n  create_cap_grant,\n} from './host-fn/actions/create_cap_grant';\nimport { CreateEntryFn, create_entry } from './host-fn/actions/create_entry';\nimport { CreateLinkFn, create_link } from './host-fn/actions/create_link';\nimport {\n  DeleteCapGrantFn,\n  delete_cap_grant,\n} from './host-fn/actions/delete_cap_grant';\nimport { DeleteEntryFn, delete_entry } from './host-fn/actions/delete_entry';\nimport { DeleteLinkFn, delete_link } from './host-fn/actions/delete_link';\nimport { UpdateEntryFn, update_entry } from './host-fn/actions/update_entry';\nimport { AgentInfoFn, agent_info } from './host-fn/agent_info';\nimport { CallRemoteFn, call_remote } from './host-fn/call_remote';\nimport { get, GetFn } from './host-fn/get';\nimport { GetDetailsFn, get_details } from './host-fn/get_detailts';\nimport { GetLinksFn, get_links } from './host-fn/get_links';\nimport { HashEntryFn, hash_entry } from './host-fn/hash_entry';\nimport { query, QueryFn } from './host-fn/query';\nimport { ensure, Path } from './path';\n\nexport interface SimulatedValidateFunctionContext {\n  get: GetFn;\n  get_details: GetDetailsFn;\n  hash_entry: HashEntryFn;\n  get_links: GetLinksFn;\n}\nexport interface Hdk extends SimulatedValidateFunctionContext {\n  create_entry: CreateEntryFn;\n  delete_entry: DeleteEntryFn;\n  update_entry: UpdateEntryFn;\n  create_link: CreateLinkFn;\n  create_cap_grant: CreateCapGrantFn;\n  delete_cap_grant: DeleteCapGrantFn;\n  delete_link: DeleteLinkFn;\n  call_remote: CallRemoteFn;\n  agent_info: AgentInfoFn;\n  query: QueryFn;\n}\n\nexport interface SimulatedZomeFunctionContext extends Hdk {\n  path: Path;\n}\n\nexport function buildValidationFunctionContext(\n  workspace: HostFnWorkspace,\n  zome_index: number\n): SimulatedValidateFunctionContext {\n  return {\n    hash_entry: hash_entry(workspace, zome_index),\n    get: get(workspace, zome_index),\n    get_details: get_details(workspace, zome_index),\n    get_links: get_links(workspace, zome_index),\n  };\n}\n\nexport function buildZomeFunctionContext(\n  workspace: HostFnWorkspace,\n  zome_index: number\n): SimulatedZomeFunctionContext {\n  const hdk: Hdk = {\n    ...buildValidationFunctionContext(workspace, zome_index),\n    create_entry: create_entry(workspace, zome_index),\n    delete_entry: delete_entry(workspace, zome_index),\n    update_entry: update_entry(workspace, zome_index),\n    create_link: create_link(workspace, zome_index),\n    delete_link: delete_link(workspace, zome_index),\n    create_cap_grant: create_cap_grant(workspace, zome_index),\n    delete_cap_grant: delete_cap_grant(workspace, zome_index),\n    call_remote: call_remote(workspace, zome_index),\n    agent_info: agent_info(workspace, zome_index),\n    query: query(workspace, zome_index),\n  };\n\n  return {\n    ...hdk,\n    path: {\n      ensure: ensure(hdk),\n    },\n  };\n}\n","import { Cascade, Cell, Workflow } from '../../cell';\nimport {\n  ValidationLimboStatus,\n  IntegrationLimboValue,\n  ValidationStatus,\n  CellState,\n  ValidationLimboValue,\n} from '../state';\nimport { getValidationLimboDhtOps } from '../dht/get';\nimport {\n  deleteValidationLimboValue,\n  putIntegrationLimboValue,\n  putValidationLimboValue,\n  putValidationReceipt,\n} from '../dht/put';\nimport { integrate_dht_ops_task } from './integrate_dht_ops';\nimport {\n  workflowPriority,\n  WorkflowReturn,\n  WorkflowType,\n  Workspace,\n} from './workflows';\nimport {\n  EntryDef,\n  SimulatedDna,\n  SimulatedZome,\n} from '../../../dnas/simulated-dna';\nimport {\n  AgentPubKey,\n  AgentValidationPkg,\n  AppEntryType,\n  Create,\n  CreateLink,\n  DeleteLink,\n  DHTOp,\n  Element,\n  Entry,\n  getEntry,\n  HeaderType,\n  NewEntryHeader,\n  now,\n} from '@holochain-open-dev/core-types';\nimport { ValidationOutcome } from '../sys_validate/types';\nimport { GetStrategy } from '../../../types';\nimport { DepsMissing } from './sys_validation';\nimport { HostFnWorkspace } from '../../hdk/host-fn';\nimport { buildValidationFunctionContext } from '../../hdk/context';\nimport { ValidationReceipt } from '@holochain-open-dev/core-types/dist/validation';\nimport { BadAgentConfig } from '../../bad-agent';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/app_validation_workflow.rs\nexport const app_validation = async (\n  workspace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  let integrateDhtOps = false;\n\n  const pendingDhtOps = getValidationLimboDhtOps(workspace.state, [\n    ValidationLimboStatus.SysValidated,\n    ValidationLimboStatus.AwaitingAppDeps,\n  ]);\n\n  for (const dhtOpHash of Object.keys(pendingDhtOps)) {\n    deleteValidationLimboValue(dhtOpHash)(workspace.state);\n\n    const validationLimboValue = pendingDhtOps[dhtOpHash];\n\n    // If we are a bad agent, we don't validate our stuff\n    let outcome: ValidationOutcome = { resolved: true, valid: true };\n    if (\n      shouldValidate(\n        workspace.state.agentPubKey,\n        validationLimboValue.op,\n        workspace.badAgentConfig\n      )\n    ) {\n      outcome = await validate_op(\n        validationLimboValue.op,\n        validationLimboValue.from_agent,\n        workspace\n      );\n    }\n    if (!outcome.resolved) {\n      validationLimboValue.status = ValidationLimboStatus.AwaitingAppDeps;\n      putValidationLimboValue(dhtOpHash, validationLimboValue);\n    } else {\n      const value: IntegrationLimboValue = {\n        op: validationLimboValue.op,\n        validation_status: outcome.valid\n          ? ValidationStatus.Valid\n          : ValidationStatus.Rejected,\n        send_receipt: outcome.valid ? validationLimboValue.send_receipt : true, // If value is invalid we always need to make a receipt\n      };\n      putIntegrationLimboValue(dhtOpHash, value)(workspace.state);\n\n      integrateDhtOps = true;\n    }\n  }\n\n  return {\n    result: undefined,\n    triggers: integrateDhtOps ? [integrate_dht_ops_task()] : [],\n  };\n};\n\nexport type AppValidationWorkflow = Workflow<any, any>;\n\nexport function app_validation_task(\n  agent: boolean = false\n): AppValidationWorkflow {\n  return {\n    type: agent ? WorkflowType.AGENT_VALIDATION : WorkflowType.APP_VALIDATION,\n    details: undefined,\n    task: worskpace => app_validation(worskpace),\n  };\n}\n\nfunction shouldValidate(\n  agentPubKey: AgentPubKey,\n  dhtOp: DHTOp,\n  badAgentConfig?: BadAgentConfig\n): boolean {\n  if (!badAgentConfig) return true;\n  return dhtOp.header.header.content.author !== agentPubKey;\n}\n\nexport async function validate_op(\n  op: DHTOp,\n  from_agent: AgentPubKey | undefined,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const element = dht_ops_to_element(op);\n\n  const entry_type = (element.signed_header.header.content as NewEntryHeader)\n    .entry_type;\n  if (entry_type === 'CapClaim' || entry_type === 'CapGrant')\n    return {\n      valid: true,\n      resolved: true,\n    };\n\n  // TODO: implement validation package\n\n  const maybeEntryDef = await get_associated_entry_def(\n    element,\n    workspace.dna,\n    workspace\n  );\n  if (maybeEntryDef && (maybeEntryDef as DepsMissing).depsHashes)\n    return {\n      resolved: false,\n      depsHashes: (maybeEntryDef as DepsMissing).depsHashes,\n    };\n\n  const zomes_to_invoke = await get_zomes_to_invoke(element, workspace);\n\n  if (zomes_to_invoke && (zomes_to_invoke as DepsMissing).depsHashes)\n    return {\n      resolved: false,\n      depsHashes: (zomes_to_invoke as DepsMissing).depsHashes,\n    };\n\n  const zomes = zomes_to_invoke as Array<SimulatedZome>;\n\n  const header = element.signed_header.header.content;\n  if (header.type === HeaderType.DeleteLink) {\n    return run_delete_link_validation_callback(zomes[0], header, workspace);\n  } else if (header.type === HeaderType.CreateLink) {\n    const cascade = new Cascade(workspace.state, workspace.p2p);\n\n    const maybeBaseEntry = await cascade.retrieve_entry(header.base_address, {\n      strategy: GetStrategy.Contents,\n    });\n    if (!maybeBaseEntry)\n      return {\n        resolved: false,\n        depsHashes: [header.base_address],\n      };\n\n    const maybeTargetEntry = await cascade.retrieve_entry(\n      header.target_address,\n      { strategy: GetStrategy.Contents }\n    );\n    if (!maybeTargetEntry)\n      return {\n        resolved: false,\n        depsHashes: [header.target_address],\n      };\n\n    return run_create_link_validation_callback(\n      zomes[0],\n      header,\n      maybeBaseEntry,\n      maybeTargetEntry,\n      workspace\n    );\n  } else {\n    return run_validation_callback_inner(\n      zomes,\n      element,\n      maybeEntryDef as EntryDef,\n      workspace\n    );\n  }\n}\n\nfunction dht_ops_to_element(op: DHTOp): Element {\n  const header = op.header;\n  let entry = undefined;\n  if ((header.header.content as NewEntryHeader).entry_hash) {\n    entry = getEntry(op);\n  }\n\n  return {\n    entry,\n    signed_header: header,\n  };\n}\n\nexport async function run_validation_callback_direct(\n  zome: SimulatedZome,\n  dna: SimulatedDna,\n  element: Element,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const maybeEntryDef = await get_associated_entry_def(element, dna, workspace);\n\n  if (maybeEntryDef && (maybeEntryDef as DepsMissing).depsHashes)\n    return {\n      resolved: false,\n      depsHashes: (maybeEntryDef as DepsMissing).depsHashes,\n    };\n\n  // TODO: implement validation package\n\n  return run_validation_callback_inner(\n    [zome],\n    element,\n    maybeEntryDef as EntryDef | undefined,\n    workspace\n  );\n}\n\nasync function get_associated_entry_def(\n  element: Element,\n  dna: SimulatedDna,\n  workspace: Workspace\n): Promise<DepsMissing | EntryDef | undefined> {\n  const cascade = new Cascade(workspace.state, workspace.p2p);\n  const maybeAppEntryType = await get_app_entry_type(element, cascade);\n\n  if (!maybeAppEntryType) return undefined;\n  if ((maybeAppEntryType as DepsMissing).depsHashes)\n    return maybeAppEntryType as DepsMissing;\n\n  const appEntryType = maybeAppEntryType as AppEntryType;\n  return dna.zomes[appEntryType.zome_id].entry_defs[appEntryType.id];\n}\n\nasync function get_app_entry_type(\n  element: Element,\n  cascade: Cascade\n): Promise<DepsMissing | AppEntryType | undefined> {\n  if (element.signed_header.header.content.type === HeaderType.Delete)\n    return get_app_entry_type_from_dep(element, cascade);\n\n  const entryType = (element.signed_header.header.content as NewEntryHeader)\n    .entry_type;\n  if (!entryType) return undefined;\n  if (\n    entryType === 'CapGrant' ||\n    entryType === 'CapClaim' ||\n    entryType === 'Agent'\n  )\n    return undefined;\n  return entryType.App;\n}\n\nasync function get_app_entry_type_from_dep(\n  element: Element,\n  cascade: Cascade\n): Promise<DepsMissing | AppEntryType | undefined> {\n  if (element.signed_header.header.content.type !== HeaderType.Delete)\n    return undefined;\n\n  const deletedHeaderHash =\n    element.signed_header.header.content.deletes_address;\n  const header = await cascade.retrieve_header(deletedHeaderHash, {\n    strategy: GetStrategy.Contents,\n  });\n\n  if (!header) return { depsHashes: [deletedHeaderHash] };\n\n  const entryType = (header.header.content as NewEntryHeader).entry_type;\n  if (\n    !entryType ||\n    entryType === 'Agent' ||\n    entryType === 'CapClaim' ||\n    entryType === 'CapGrant'\n  )\n    return undefined;\n  return entryType.App;\n}\n\nasync function get_zomes_to_invoke(\n  element: Element,\n  workspace: Workspace\n): Promise<DepsMissing | Array<SimulatedZome>> {\n  const cascade = new Cascade(workspace.state, workspace.p2p);\n  const maybeAppEntryType = await get_app_entry_type(element, cascade);\n\n  if (maybeAppEntryType && (maybeAppEntryType as DepsMissing).depsHashes)\n    return maybeAppEntryType as DepsMissing;\n\n  if (maybeAppEntryType) {\n    // It's a newEntryHeader\n    return [workspace.dna.zomes[(maybeAppEntryType as AppEntryType).zome_id]];\n  } else {\n    const header = element.signed_header.header.content;\n    if (header.type === HeaderType.CreateLink) {\n      return [workspace.dna.zomes[header.zome_id]];\n    } else if (header.type === HeaderType.DeleteLink) {\n      const maybeHeader = await cascade.retrieve_header(\n        header.link_add_address,\n        { strategy: GetStrategy.Contents }\n      );\n\n      if (!maybeHeader)\n        return {\n          depsHashes: [header.link_add_address],\n        };\n\n      return [\n        workspace.dna.zomes[(maybeHeader.header.content as CreateLink).zome_id],\n      ];\n    }\n\n    return workspace.dna.zomes;\n  }\n}\n\nasync function run_validation_callback_inner(\n  zomes_to_invoke: Array<SimulatedZome>,\n  element: Element,\n  entry_def: EntryDef | undefined,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const fnsToCall = get_element_validate_functions_to_invoke(\n    element,\n    entry_def\n  );\n\n  return invoke_validation_fns(\n    zomes_to_invoke,\n    fnsToCall,\n    { element },\n    workspace\n  );\n}\n\nasync function invoke_validation_fns(\n  zomes_to_invoke: Array<SimulatedZome>,\n  fnsToCall: string[],\n  payload: any,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const cascade = new Cascade(workspace.state, workspace.p2p);\n  const hostFnWorkspace: HostFnWorkspace = {\n    cascade,\n    state: workspace.state,\n    dna: workspace.dna,\n    p2p: workspace.p2p,\n  };\n\n  for (const zome of zomes_to_invoke) {\n    for (const validateFn of fnsToCall) {\n      if (zome.validation_functions[validateFn]) {\n        const context = buildValidationFunctionContext(\n          hostFnWorkspace,\n          workspace.dna.zomes.findIndex(z => z === zome)\n        );\n\n        const outcome: ValidationOutcome = await zome.validation_functions[\n          validateFn\n        ](context)(payload);\n        if (!outcome.resolved) return outcome;\n        else if (!outcome.valid) return outcome;\n      }\n    }\n  }\n\n  return { resolved: true, valid: true };\n}\n\nexport async function run_agent_validation_callback(\n  workspace: Workspace,\n  elements: Element[]\n) {\n  const create_agent_element = elements[2];\n  const fnsToCall = ['validate_create_agent'];\n\n  const zomes_to_invoke = await get_zomes_to_invoke(\n    create_agent_element,\n    workspace\n  );\n\n  const membrane_proof = (elements[1].signed_header.header\n    .content as AgentValidationPkg).membrane_proof;\n\n  return invoke_validation_fns(\n    zomes_to_invoke as SimulatedZome[],\n    fnsToCall,\n    {\n      element: elements[2],\n      membrane_proof,\n      agent_pub_key: create_agent_element.signed_header.header.content.author,\n    },\n    workspace\n  );\n}\n\nexport async function run_create_link_validation_callback(\n  zome: SimulatedZome,\n  link_add: CreateLink,\n  base: Entry,\n  target: Entry,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const validateCreateLink = 'validate_create_link';\n\n  if (zome.validation_functions[validateCreateLink]) {\n    const hostFnWorkspace: HostFnWorkspace = {\n      cascade: new Cascade(workspace.state, workspace.p2p),\n      state: workspace.state,\n      dna: workspace.dna,\n      p2p: workspace.p2p,\n    };\n    const context = buildValidationFunctionContext(\n      hostFnWorkspace,\n      workspace.dna.zomes.findIndex(z => z === zome)\n    );\n\n    const outcome: ValidationOutcome = await zome.validation_functions[\n      validateCreateLink\n    ](context)({ link_add, base, target });\n\n    return outcome;\n  }\n\n  return {\n    resolved: true,\n    valid: true,\n  };\n}\n\nexport async function run_delete_link_validation_callback(\n  zome: SimulatedZome,\n  delete_link: DeleteLink,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const validateCreateLink = 'validate_delete_link';\n\n  if (zome.validation_functions[validateCreateLink]) {\n    const hostFnWorkspace: HostFnWorkspace = {\n      cascade: new Cascade(workspace.state, workspace.p2p),\n      state: workspace.state,\n      dna: workspace.dna,\n      p2p: workspace.p2p,\n    };\n    const context = buildValidationFunctionContext(\n      hostFnWorkspace,\n      workspace.dna.zomes.findIndex(z => z === zome)\n    );\n\n    const outcome: ValidationOutcome = await zome.validation_functions[\n      validateCreateLink\n    ](context)({ delete_link });\n\n    return outcome;\n  }\n\n  return {\n    resolved: true,\n    valid: true,\n  };\n}\n\nfunction get_element_validate_functions_to_invoke(\n  element: Element,\n  maybeEntryDef: EntryDef | undefined\n): Array<string> {\n  const fnsComponents = ['validate'];\n\n  const header = element.signed_header.header.content;\n\n  if (header.type === HeaderType.Create) fnsComponents.push('create');\n  if (header.type === HeaderType.Update) fnsComponents.push('update');\n  if (header.type === HeaderType.Delete) fnsComponents.push('delete');\n\n  const entry_type = (header as NewEntryHeader).entry_type;\n  if (entry_type) {\n    // if (entry_type === 'Agent') fnsComponents.push('agent');\n    if ((entry_type as { App: AppEntryType }).App) {\n      fnsComponents.push('entry');\n      if (maybeEntryDef) fnsComponents.push(maybeEntryDef.id);\n    }\n  }\n\n  return unpackValidateFnsComponents(fnsComponents);\n}\n\nfunction unpackValidateFnsComponents(\n  fnsComponents: Array<string>\n): Array<string> {\n  const validateFunctions = [fnsComponents[0]];\n\n  for (let i = 1; i < fnsComponents.length; i++) {\n    validateFunctions.push(`${validateFunctions[i - 1]}_${fnsComponents[i]}`);\n  }\n  return validateFunctions;\n}\n","import {\n  AgentPubKey,\n  Element,\n  HeaderType,\n  NewEntryHeader,\n  SignedHeaderHashed,\n} from '@holochain-open-dev/core-types';\nimport { cloneDeep } from 'lodash-es';\nimport { SimulatedZome } from '../../../dnas/simulated-dna';\nimport { GetStrategy } from '../../../types';\nimport { BadAgentConfig } from '../../bad-agent';\nimport { Cell, run_create_link_validation_callback } from '../../cell';\nimport { buildZomeFunctionContext } from '../../hdk/context';\nimport { HostFnWorkspace } from '../../hdk/host-fn';\nimport { Cascade } from '../cascade/cascade';\nimport { getTipOfChain, valid_cap_grant } from '../source-chain/utils';\nimport { CellState } from '../state';\nimport { ValidationOutcome } from '../sys_validate/types';\nimport {\n  run_delete_link_validation_callback,\n  run_validation_callback_direct,\n} from './app_validation';\nimport { produce_dht_ops_task } from './produce_dht_ops';\nimport { sys_validate_element } from './sys_validation';\nimport { Workflow, WorkflowType, Workspace } from './workflows';\n\n/**\n * Calls the zome function of the cell DNA\n * This can only be called in the simulated mode: we can assume that cell.simulatedDna exists\n */\nexport const callZomeFn = (\n  zomeName: string,\n  fnName: string,\n  payload: any,\n  provenance: AgentPubKey,\n  cap: string\n) => async (\n  workspace: Workspace\n): Promise<{ result: any; triggers: Array<Workflow<any, any>> }> => {\n  if (!valid_cap_grant(workspace.state, zomeName, fnName, provenance, cap))\n    throw new Error('Unauthorized Zome Call');\n\n  const currentHeader = getTipOfChain(workspace.state);\n  const chain_head_start_len = workspace.state.sourceChain.length;\n\n  const zomeIndex = workspace.dna.zomes.findIndex(\n    zome => zome.name === zomeName\n  );\n  if (zomeIndex < 0)\n    throw new Error(`There is no zome with the name ${zomeName} in this DNA`);\n\n  const zome = workspace.dna.zomes[zomeIndex];\n  if (!zome.zome_functions[fnName])\n    throw new Error(\n      `There isn't a function with the name ${fnName} in this zome with the name ${zomeName}`\n    );\n\n  const contextState = cloneDeep(workspace.state);\n\n  const hostFnWorkspace: HostFnWorkspace = {\n    cascade: new Cascade(workspace.state, workspace.p2p),\n    state: contextState,\n    dna: workspace.dna,\n    p2p: workspace.p2p,\n  };\n  const zomeFnContext = buildZomeFunctionContext(hostFnWorkspace, zomeIndex);\n\n  const result = await zome.zome_functions[fnName].call(zomeFnContext)(payload);\n\n  let triggers: Array<Workflow<any, any>> = [];\n  if (getTipOfChain(contextState) !== currentHeader) {\n    // Do validation\n    let i = chain_head_start_len;\n\n    const elementsToAppValidate = [];\n\n    while (i < contextState.sourceChain.length) {\n      const headerHash = contextState.sourceChain[i];\n      const signed_header: SignedHeaderHashed = contextState.CAS[headerHash];\n      const entry_hash = (signed_header.header.content as NewEntryHeader)\n        .entry_hash;\n\n      const element: Element = {\n        entry: entry_hash ? contextState.CAS[entry_hash] : undefined,\n        signed_header,\n      };\n\n      const depsMissing = await sys_validate_element(\n        element,\n        { ...workspace, state: contextState },\n        workspace.p2p\n      );\n      if (depsMissing)\n        throw new Error(\n          `Could not validate a new element due to missing dependencies`\n        );\n\n      elementsToAppValidate.push(element);\n      i++;\n    }\n\n    if (shouldValidateBeforePublishing(workspace.badAgentConfig)) {\n      for (const element of elementsToAppValidate) {\n        const outcome = await run_app_validation(\n          zome,\n          element,\n          contextState,\n          workspace\n        );\n        if (!outcome.resolved)\n          throw new Error('Error creating a new element: missing dependencies');\n        if (!outcome.valid)\n          throw new Error('Error creating a new element: invalid');\n      }\n    }\n\n    triggers.push(produce_dht_ops_task());\n  }\n\n  workspace.state.CAS = contextState.CAS;\n  workspace.state.sourceChain = contextState.sourceChain;\n\n  return {\n    result: cloneDeep(result),\n    triggers,\n  };\n};\n\nexport type CallZomeFnWorkflow = Workflow<\n  { zome: string; fnName: string; payload: any },\n  any\n>;\n\nexport function call_zome_fn_workflow(\n  zome: string,\n  fnName: string,\n  payload: any,\n  provenance: AgentPubKey\n): CallZomeFnWorkflow {\n  return {\n    type: WorkflowType.CALL_ZOME,\n    details: {\n      fnName,\n      payload,\n      zome,\n    },\n    task: worskpace =>\n      callZomeFn(zome, fnName, payload, provenance, '')(worskpace),\n  };\n}\n\nfunction shouldValidateBeforePublishing(\n  badAgentConfig?: BadAgentConfig\n): boolean {\n  if (!badAgentConfig) return true;\n  return !badAgentConfig.disable_validation_before_publish;\n}\n\nasync function run_app_validation(\n  zome: SimulatedZome,\n  element: Element,\n  contextState: CellState,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const header = element.signed_header.header.content;\n  if (header.type === HeaderType.CreateLink) {\n    const cascade = new Cascade(contextState, workspace.p2p);\n    const baseEntry = await cascade.retrieve_entry(header.base_address, {\n      strategy: GetStrategy.Contents,\n    });\n    if (!baseEntry) {\n      return {\n        resolved: false,\n        depsHashes: [header.base_address],\n      };\n    }\n    const targetEntry = await cascade.retrieve_entry(header.target_address, {\n      strategy: GetStrategy.Contents,\n    });\n    if (!targetEntry) {\n      return {\n        resolved: false,\n        depsHashes: [header.target_address],\n      };\n    }\n    return run_create_link_validation_callback(\n      zome,\n      header,\n      baseEntry,\n      targetEntry,\n      workspace\n    );\n  } else if (header.type === HeaderType.DeleteLink) {\n    return run_delete_link_validation_callback(zome, header, workspace);\n  } else if (\n    header.type === HeaderType.Create ||\n    header.type === HeaderType.Update ||\n    header.type === HeaderType.Delete\n  ) {\n    return run_validation_callback_direct(\n      zome,\n      workspace.dna,\n      element,\n      workspace\n    );\n  }\n  return {\n    valid: true,\n    resolved: true,\n  };\n}\n","import {\n  AgentPubKey,\n  Hash,\n  Entry,\n  CellId,\n} from '@holochain-open-dev/core-types';\nimport { Cell, run_agent_validation_callback, Workflow } from '../../cell';\nimport {\n  buildAgentValidationPkg,\n  buildCreate,\n  buildDna,\n  buildShh,\n} from '../source-chain/builder-headers';\nimport {\n  getSourceChainElement,\n  getSourceChainElements,\n} from '../source-chain/get';\nimport { putElement } from '../source-chain/put';\nimport { CellState } from '../state';\nimport { produce_dht_ops_task } from './produce_dht_ops';\nimport { WorkflowReturn, WorkflowType, Workspace } from './workflows';\n\nexport const genesis = (\n  agentId: AgentPubKey,\n  dnaHash: Hash,\n  membrane_proof: any\n) => async (worskpace: Workspace): Promise<WorkflowReturn<void>> => {\n  const dna = buildDna(dnaHash, agentId);\n  putElement({ signed_header: buildShh(dna), entry: undefined })(\n    worskpace.state\n  );\n\n  const pkg = buildAgentValidationPkg(worskpace.state, membrane_proof);\n  putElement({ signed_header: buildShh(pkg), entry: undefined })(\n    worskpace.state\n  );\n\n  const entry: Entry = {\n    content: agentId,\n    entry_type: 'Agent',\n  };\n  const create_agent_pub_key_entry = buildCreate(\n    worskpace.state,\n    entry,\n    'Agent'\n  );\n  putElement({\n    signed_header: buildShh(create_agent_pub_key_entry),\n    entry: entry,\n  })(worskpace.state);\n\n  if (\n    !(\n      worskpace.badAgentConfig &&\n      worskpace.badAgentConfig.disable_validation_before_publish\n    )\n  ) {\n    const firstElements = getSourceChainElements(worskpace.state, 0, 3);\n    const result = await run_agent_validation_callback(\n      worskpace,\n      firstElements\n    );\n    if (!result.resolved) throw new Error('Unresolved in agent validate?');\n    else if (!result.valid) throw new Error('Agent is invalid in this Dna');\n  }\n\n  return {\n    result: undefined,\n    triggers: [produce_dht_ops_task()],\n  };\n};\n\nexport type GenesisWorkflow = Workflow<\n  { cellId: CellId; membrane_proof: any },\n  void\n>;\n\nexport function genesis_task(\n  cellId: CellId,\n  membrane_proof: any\n): GenesisWorkflow {\n  return {\n    type: WorkflowType.GENESIS,\n    details: {\n      cellId,\n      membrane_proof,\n    },\n    task: worskpace => genesis(cellId[1], cellId[0], membrane_proof)(worskpace),\n  };\n}\n","import { Dictionary, DHTOp, AgentPubKey } from '@holochain-open-dev/core-types';\nimport { hasDhtOpBeenProcessed, Workflow } from '../../cell';\nimport { ValidationLimboValue, ValidationLimboStatus } from '../state';\nimport { putValidationLimboValue } from '../dht/put';\nimport { sys_validation_task } from './sys_validation';\nimport { WorkflowReturn, WorkflowType, Workspace } from './workflows';\nimport { getDHTOpBasis } from '../utils';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/incoming_dht_ops_workflow.rs\nexport const incoming_dht_ops = (\n  dhtOps: Dictionary<DHTOp>,\n  request_validation_receipt: boolean,\n  from_agent: AgentPubKey | undefined\n) => async (workspace: Workspace): Promise<WorkflowReturn<void>> => {\n  let sysValidate = false;\n\n  for (const dhtOpHash of Object.keys(dhtOps)) {\n    if (!hasDhtOpBeenProcessed(workspace.state, dhtOpHash)) {\n      const dhtOp = dhtOps[dhtOpHash];\n\n      const basis = getDHTOpBasis(dhtOp);\n\n      const validationLimboValue: ValidationLimboValue = {\n        basis,\n        from_agent,\n        last_try: undefined,\n        num_tries: 0,\n        op: dhtOp,\n        status: ValidationLimboStatus.Pending,\n        time_added: Date.now(),\n        send_receipt: request_validation_receipt,\n      };\n\n      putValidationLimboValue(dhtOpHash, validationLimboValue)(workspace.state);\n\n      sysValidate = true;\n    }\n  }\n\n  return {\n    result: undefined,\n    triggers: sysValidate ? [sys_validation_task()] : [],\n  };\n};\n\nexport type IncomingDhtOpsWorkflow = Workflow<\n  { from_agent: AgentPubKey; ops: Dictionary<DHTOp> },\n  void\n>;\n\nexport function incoming_dht_ops_task(\n  from_agent: AgentPubKey,\n  request_validation_receipt: boolean,\n  ops: Dictionary<DHTOp>\n): IncomingDhtOpsWorkflow {\n  return {\n    type: WorkflowType.INCOMING_DHT_OPS,\n    details: {\n      from_agent,\n      ops,\n    },\n    task: worskpace =>\n      incoming_dht_ops(ops, request_validation_receipt, from_agent)(worskpace),\n  };\n}\n","import { Task } from './task';\n\nexport type Middleware<P> = (payload: P) => Promise<void>;\nexport type SuccessMiddleware<P> = (payload: P, result: any) => Promise<void>;\nexport type ErrorMiddleware<P> = (payload: P, error: any) => Promise<void>;\nexport type MiddlewareSubscription = { unsubscribe: () => void };\n\nexport class MiddlewareExecutor<P> {\n  _beforeMiddlewares: Array<Middleware<P>> = [];\n  _successMiddlewares: Array<SuccessMiddleware<P>> = [];\n  _errorMiddlewares: Array<ErrorMiddleware<P>> = [];\n\n  async execute<T>(task: Task<T>, payload: P): Promise<T> {\n    for (const middleware of this._beforeMiddlewares) {\n      await middleware(payload);\n    }\n\n    try {\n      const result = await task();\n\n      for (const middleware of this._successMiddlewares) {\n        await middleware(payload, result);\n      }\n\n      return result;\n    } catch (e) {\n      for (const middleware of this._errorMiddlewares) {\n        await middleware(payload, e);\n      }\n\n      throw e;\n    }\n  }\n\n  before(callback: Middleware<P>): MiddlewareSubscription {\n    return this._addListener(callback, this._beforeMiddlewares);\n  }\n  success(callback: SuccessMiddleware<P>): MiddlewareSubscription {\n    return this._addListener(callback, this._successMiddlewares);\n  }\n\n  error(callback: ErrorMiddleware<P>): MiddlewareSubscription {\n    return this._addListener(callback, this._errorMiddlewares);\n  }\n\n  private _addListener(callback: Function, middlewareList: Array<Function>) {\n    middlewareList.unshift(callback);\n\n    return {\n      unsubscribe: () => {\n        const index = middlewareList.findIndex(c => c === callback);\n        middlewareList.splice(index, 1);\n      },\n    };\n  }\n}\n","import {\n  CellId,\n  AgentPubKey,\n  Hash,\n  Dictionary,\n  DHTOp,\n  CapSecret,\n  Timestamp,\n  ValidationReceipt,\n  Element,\n} from '@holochain-open-dev/core-types';\nimport { Conductor } from '../conductor';\nimport { genesis, genesis_task } from './workflows/genesis';\nimport {\n  CallZomeFnWorkflow,\n  call_zome_fn_workflow,\n} from './workflows/call_zome_fn';\nimport { P2pCell } from '../network/p2p-cell';\nimport { incoming_dht_ops_task } from './workflows/incoming_dht_ops';\nimport { CellState, query_dht_ops } from './state';\nimport {\n  triggeredWorkflowFromType,\n  Workflow,\n  workflowPriority,\n  WorkflowType,\n  Workspace,\n} from './workflows/workflows';\nimport { MiddlewareExecutor } from '../../executor/middleware-executor';\nimport { GetLinksResponse, GetResult } from './cascade/types';\nimport { Authority } from './cascade/authority';\nimport { getHashType, hash, HashType } from '../../processors/hash';\nimport { GetLinksOptions, GetOptions } from '../../types';\nimport { cloneDeep, uniq } from 'lodash-es';\nimport { DhtArc } from '../network/dht_arc';\nimport { getDHTOpBasis } from './utils';\nimport { GossipData } from '../network/gossip/types';\nimport { hasDhtOpBeenProcessed } from './dht/get';\nimport { putValidationReceipt } from './dht/put';\nimport { BadAction, getBadActions, getBadAgents } from '../network/utils';\nimport {\n  app_validation_task,\n  run_agent_validation_callback,\n} from './workflows/app_validation';\nimport { getSourceChainElements } from './source-chain/get';\n\nexport type CellSignal = 'after-workflow-executed' | 'before-workflow-executed';\nexport type CellSignalListener = (payload: any) => void;\n\nexport class Cell {\n  _triggers: Dictionary<{ running: boolean; triggered: boolean }> = {\n    [WorkflowType.INTEGRATE_DHT_OPS]: { running: false, triggered: true },\n    [WorkflowType.PRODUCE_DHT_OPS]: { running: false, triggered: true },\n    [WorkflowType.PUBLISH_DHT_OPS]: { running: false, triggered: true },\n    [WorkflowType.SYS_VALIDATION]: { running: false, triggered: true },\n    [WorkflowType.APP_VALIDATION]: { running: false, triggered: true },\n    [WorkflowType.VALIDATION_RECEIPT]: { running: false, triggered: true },\n  };\n\n  workflowExecutor = new MiddlewareExecutor<Workflow<any, any>>();\n\n  constructor(public _state: CellState, public conductor: Conductor) {\n    // Let genesis be run before actually joining\n  }\n\n  get cellId(): CellId {\n    return [this._state.dnaHash, this._state.agentPubKey];\n  }\n\n  get agentPubKey(): AgentPubKey {\n    return this.cellId[1];\n  }\n\n  get dnaHash(): Hash {\n    return this.cellId[0];\n  }\n\n  get p2p(): P2pCell {\n    return this.conductor.network.p2pCells[this.cellId[0]][this.cellId[1]];\n  }\n\n  getState(): CellState {\n    return cloneDeep(this._state);\n  }\n\n  getSimulatedDna() {\n    return this.conductor.registeredDnas[this.dnaHash];\n  }\n\n  static async create(\n    conductor: Conductor,\n    cellId: CellId,\n    membrane_proof: any\n  ): Promise<Cell> {\n    const newCellState: CellState = {\n      dnaHash: cellId[0],\n      agentPubKey: cellId[1],\n      CAS: {},\n      integrationLimbo: {},\n      metadata: {\n        link_meta: [],\n        misc_meta: {},\n        system_meta: {},\n      },\n      validationLimbo: {},\n      integratedDHTOps: {},\n      authoredDHTOps: {},\n      validationReceipts: {},\n      sourceChain: [],\n      badAgents: [],\n    };\n\n    const cell = new Cell(newCellState, conductor);\n\n    conductor.network.createP2pCell(cell);\n\n    await cell._runWorkflow(genesis_task(cellId, membrane_proof));\n\n    await cell.p2p.join(cell);\n\n    return cell;\n  }\n\n  /** Workflows */\n\n  callZomeFn(args: {\n    zome: string;\n    fnName: string;\n    payload: any;\n    cap: string;\n    provenance: AgentPubKey;\n  }): Promise<any> {\n    return this._runWorkflow(\n      call_zome_fn_workflow(\n        args.zome,\n        args.fnName,\n        args.payload,\n        args.provenance\n      )\n    );\n  }\n\n  /** Network handlers */\n  // https://github.com/holochain/holochain/blob/develop/crates/holochain/src/conductor/cell.rs#L429\n\n  public handle_publish(\n    from_agent: AgentPubKey,\n    request_validation_receipt: boolean,\n    ops: Dictionary<DHTOp>\n  ): Promise<void> {\n    return this._runWorkflow(\n      incoming_dht_ops_task(from_agent, request_validation_receipt, ops)\n    );\n  }\n\n  public async handle_get(\n    dht_hash: Hash,\n    options: GetOptions\n  ): Promise<GetResult | undefined> {\n    const authority = new Authority(this._state, this.p2p);\n\n    const hashType = getHashType(dht_hash);\n    if (hashType === HashType.ENTRY || hashType === HashType.AGENT) {\n      return authority.handle_get_entry(dht_hash, options);\n    } else if (hashType === HashType.HEADER) {\n      return authority.handle_get_element(dht_hash, options);\n    }\n    return undefined;\n  }\n\n  public async handle_get_links(\n    base_address: Hash,\n    options: GetLinksOptions\n  ): Promise<GetLinksResponse> {\n    const authority = new Authority(this._state, this.p2p);\n    return authority.handle_get_links(base_address, options);\n  }\n\n  public async handle_call_remote(\n    from_agent: AgentPubKey,\n    zome_name: string,\n    fn_name: string,\n    cap: CapSecret | undefined,\n    payload: any\n  ): Promise<any> {\n    return this.callZomeFn({\n      zome: zome_name,\n      cap: cap as CapSecret,\n      fnName: fn_name,\n      payload,\n      provenance: from_agent,\n    });\n  }\n\n  /** Gossips */\n\n  public handle_fetch_op_hashes_for_constraints(\n    dht_arc: DhtArc,\n    since: number | undefined,\n    until: number | undefined\n  ): Array<Hash> {\n    return query_dht_ops(this._state.integratedDHTOps, since, until, dht_arc);\n  }\n\n  public handle_fetch_op_hash_data(op_hashes: Array<Hash>): Dictionary<DHTOp> {\n    const result: Dictionary<DHTOp> = {};\n    for (const opHash of op_hashes) {\n      const value = this._state.integratedDHTOps[opHash];\n      if (value) {\n        result[opHash] = value.op;\n      }\n    }\n    return result;\n  }\n\n  public handle_gossip_ops(op_hashes: Array<Hash>): Dictionary<DHTOp> {\n    const result: Dictionary<DHTOp> = {};\n    for (const opHash of op_hashes) {\n      const value = this._state.integratedDHTOps[opHash];\n      if (value) {\n        result[opHash] = value.op;\n      }\n    }\n    return result;\n  }\n\n  async handle_gossip(from_agent: AgentPubKey, gossip: GossipData) {\n    const dhtOpsToProcess: Dictionary<DHTOp> = {};\n\n    for (const badAction of gossip.badActions) {\n      const dhtOpHash = hash(badAction.op, HashType.DHTOP);\n      if (!hasDhtOpBeenProcessed(this._state, dhtOpHash)) {\n        dhtOpsToProcess[dhtOpHash] = badAction.op;\n      }\n\n      for (const receipt of badAction.receipts) {\n        putValidationReceipt(dhtOpHash, receipt)(this._state);\n      }\n    }\n\n    for (const [dhtOpHash, validatedOp] of Object.entries(\n      gossip.validated_dht_ops\n    )) {\n      for (const receipt of validatedOp.validation_receipts) {\n        putValidationReceipt(dhtOpHash, receipt)(this._state);\n      }\n\n      // TODO: fix for when sharding is implemented\n      if (this.p2p.shouldWeHold(getDHTOpBasis(validatedOp.op))) {\n        dhtOpsToProcess[dhtOpHash] = validatedOp.op;\n      }\n    }\n\n    if (Object.keys(dhtOpsToProcess).length > 0) {\n      await this.handle_publish(from_agent, false, dhtOpsToProcess);\n    }\n\n    const badAgents = getBadAgents(this._state);\n    if (badAgents.length > this._state.badAgents.length) {\n      // We have added bad agents: resync the neighbors\n      await this.p2p.syncNeighbors();\n    }\n\n    this._state.badAgents = uniq([...this._state.badAgents, ...badAgents]);\n  }\n\n  // Check if the agent we are trying to connect with passes the membrane rules for this Dna\n  async handle_check_agent(firstElements: Element[]): Promise<void> {\n    const result = await this.workflowExecutor.execute(\n      () => run_agent_validation_callback(this.buildWorkspace(), firstElements),\n      app_validation_task(true)\n    );\n\n    if (!result.resolved) throw new Error('Unresolved in agent validate?');\n    else if (!result.valid) throw new Error('Agent is invalid in this Dna');\n  }\n\n  /** Workflow internal execution */\n\n  triggerWorkflow(workflow: Workflow<any, any>) {\n    this._triggers[workflow.type].triggered = true;\n\n    setTimeout(() => this._runPendingWorkflows());\n  }\n\n  async _runPendingWorkflows() {\n    const pendingWorkflows: WorkflowType[] = Object.entries(this._triggers)\n      .filter(([type, t]) => t.triggered && !t.running)\n      .map(([type, t]) => type as WorkflowType);\n\n    const workflowsToRun = pendingWorkflows.map(triggeredWorkflowFromType);\n\n    const promises = Object.values(workflowsToRun).map(async w => {\n      if (!this._triggers[w.type]) console.log(w);\n      this._triggers[w.type].triggered = false;\n      this._triggers[w.type].running = true;\n      await this._runWorkflow(w);\n      this._triggers[w.type].running = false;\n\n      this._runPendingWorkflows();\n    });\n\n    await Promise.all(promises);\n  }\n\n  async _runWorkflow(workflow: Workflow<any, any>): Promise<any> {\n    const result = await this.workflowExecutor.execute(\n      () => workflow.task(this.buildWorkspace()),\n      workflow\n    );\n\n    result.triggers.forEach(triggeredWorkflow =>\n      this.triggerWorkflow(triggeredWorkflow)\n    );\n    return result.result;\n  }\n\n  /** Private helpers */\n\n  private buildWorkspace(): Workspace {\n    let badAgentConfig = undefined;\n    let dna = this.getSimulatedDna();\n    if (this.conductor.badAgent) {\n      badAgentConfig = this.conductor.badAgent.config;\n      if (\n        this.conductor.badAgent.counterfeitDnas[this.cellId[0]] &&\n        this.conductor.badAgent.counterfeitDnas[this.cellId[0]][this.cellId[1]]\n      ) {\n        dna = this.conductor.badAgent.counterfeitDnas[this.cellId[0]][\n          this.cellId[1]\n        ];\n      }\n    }\n\n    return {\n      state: this._state,\n      p2p: this.p2p,\n      dna,\n      badAgentConfig,\n    };\n  }\n}\n","import { AgentPubKey } from '@holochain-open-dev/core-types';\nimport { Cell } from '../cell';\nimport { NetworkRequest } from './network-request';\n\nexport class Connection {\n  private _closed = false;\n\n  get closed() {\n    return this._closed;\n  }\n\n  close() {\n    this._closed = false;\n  }\n\n  constructor(public opener: Cell, public receiver: Cell) {\n    if (\n      opener.p2p.badAgents.includes(receiver.agentPubKey) ||\n      receiver.p2p.badAgents.includes(opener.agentPubKey)\n    ) {\n      throw new Error('Connection closed!');\n    }\n  }\n\n  sendRequest<T>(\n    fromAgent: AgentPubKey,\n    networkRequest: NetworkRequest<T>\n  ): Promise<T> {\n    if (this.closed) throw new Error('Connection closed!');\n\n    if (this.opener.agentPubKey === fromAgent) {\n      return networkRequest(this.receiver);\n    } else if (this.receiver.agentPubKey === fromAgent) {\n      return networkRequest(this.opener);\n    }\n    throw new Error('Bad request');\n  }\n\n  getPeer(myAgentPubKey: AgentPubKey): Cell {\n    if (this.opener.agentPubKey === myAgentPubKey) return this.receiver;\n    return this.opener;\n  }\n}\n","import { Middleware } from './middleware-executor';\n\nexport const sleep = (ms: number) =>\n  new Promise<void>(resolve => setTimeout(() => resolve(), ms));\n\nexport const DelayMiddleware = (ms: number): Middleware<any> => () => sleep(ms);\n","import { Dictionary } from '@holochain-open-dev/core-types';\nimport { sleep } from '../../../../executor/delay-middleware';\nimport { getValidationReceipts } from '../../../cell';\nimport { P2pCell } from '../../p2p-cell';\nimport { getBadActions } from '../../utils';\nimport { GossipData, GossipDhtOpData } from '../types';\n\nexport const GOSSIP_INTERVAL_MS = 500;\n\nexport class SimpleBloomMod {\n  gossip_on: boolean = true;\n\n  lastBadActions = 0;\n\n  constructor(protected p2pCell: P2pCell) {\n    this.loop();\n  }\n  async loop() {\n    while (true) {\n      if (this.gossip_on) {\n        try {\n          await this.run_one_iteration();\n        } catch (e) {\n          console.warn('Connection closed');\n        }\n      }\n      await sleep(GOSSIP_INTERVAL_MS);\n    }\n  }\n\n  async run_one_iteration(): Promise<void> {\n    const localDhtOpsHashes = Object.keys(\n      this.p2pCell.cell._state.integratedDHTOps\n    );\n    const localDhtOps = this.p2pCell.cell.handle_fetch_op_hash_data(\n      localDhtOpsHashes\n    );\n\n    const state = this.p2pCell.cell._state;\n\n    const dhtOpData: Dictionary<GossipDhtOpData> = {};\n\n    for (const dhtOpHash of Object.keys(localDhtOps)) {\n      const receipts = getValidationReceipts(dhtOpHash)(state);\n      dhtOpData[dhtOpHash] = {\n        op: localDhtOps[dhtOpHash],\n        validation_receipts: receipts,\n      };\n    }\n\n    const pretendValid =\n      this.p2pCell.cell.conductor.badAgent &&\n      this.p2pCell.cell.conductor.badAgent.config\n        .pretend_invalid_elements_are_valid;\n\n    const badActions = pretendValid ? [] : getBadActions(state);\n\n    const gossips: GossipData = {\n      badActions,\n      neighbors: [],\n      validated_dht_ops: dhtOpData,\n    };\n\n    let warrant =\n      badActions.length > 0 && badActions.length !== this.lastBadActions;\n    this.lastBadActions = badActions.length;\n\n    if (warrant) {\n      const promises = [\n        ...this.p2pCell.neighbors,\n        ...this.p2pCell.farKnownPeers,\n      ].map(peer => this.p2pCell.outgoing_gossip(peer, gossips, warrant));\n\n      await Promise.all(promises);\n    } else {\n      for (const neighbor of this.p2pCell.neighbors) {\n        await this.p2pCell.outgoing_gossip(neighbor, gossips, warrant);\n      }\n    }\n  }\n}\n","import {\n  AgentPubKey,\n  DHTOp,\n  Dictionary,\n  Hash,\n} from '@holochain-open-dev/core-types';\nimport { GetOptions } from '../../types';\nimport { Cell } from '../cell/cell';\n\nexport enum NetworkRequestType {\n  CALL_REMOTE = 'Call Remote',\n  PUBLISH_REQUEST = 'Publish Request',\n  GET_REQUEST = 'Get Request',\n  WARRANT = 'Warrant',\n  GOSSIP = 'Gossip',\n  CONNECT = 'Connect',\n}\n\nexport type NetworkRequest<T> = (cell: Cell) => Promise<T>;\n\nexport interface NetworkRequestInfo<T extends NetworkRequestType, D> {\n  dnaHash: Hash;\n  fromAgent: AgentPubKey;\n  toAgent: AgentPubKey;\n  type: T;\n  details: D;\n}\n\nexport type PublishRequestInfo = NetworkRequestInfo<\n  NetworkRequestType.PUBLISH_REQUEST,\n  {\n    dhtOps: Dictionary<DHTOp>;\n  }\n>;\n\nexport type GetRequestInfo = NetworkRequestInfo<\n  NetworkRequestType.GET_REQUEST,\n  {\n    hash: Hash;\n    options: GetOptions;\n  }\n>;\n\nexport type CallRemoteRequestInfo = NetworkRequestInfo<\n  NetworkRequestType.CALL_REMOTE,\n  {}\n>;\n","import {\n  AgentPubKey,\n  CapSecret,\n  CellId,\n  DHTOp,\n  Dictionary,\n  Element,\n  Hash,\n  ValidationReceipt,\n  ValidationStatus,\n} from '@holochain-open-dev/core-types';\nimport { MiddlewareExecutor } from '../../executor/middleware-executor';\nimport { hash, HashType, location } from '../../processors/hash';\nimport { GetLinksOptions, GetOptions } from '../../types';\nimport { Cell, getSourceChainElements, isHoldingDhtOp } from '../cell';\nimport {\n  GetElementResponse,\n  GetEntryResponse,\n  GetLinksResponse,\n} from '../cell/cascade/types';\nimport { Connection } from './connection';\nimport { DhtArc } from './dht_arc';\nimport { SimpleBloomMod } from './gossip/bloom';\nimport { GossipData } from './gossip/types';\nimport { Network } from './network';\nimport {\n  NetworkRequestInfo,\n  NetworkRequest,\n  NetworkRequestType,\n} from './network-request';\nimport { getBadAgents } from './utils';\n\nexport type P2pCellState = {\n  neighbors: AgentPubKey[];\n  farKnownPeers: AgentPubKey[];\n  badAgents: AgentPubKey[];\n  redundancyFactor: number;\n  neighborNumber: number;\n};\n\n// From: https://github.com/holochain/holochain/blob/develop/crates/holochain_p2p/src/lib.rs\nexport class P2pCell {\n  farKnownPeers: AgentPubKey[];\n\n  storageArc: DhtArc;\n  neighborNumber: number;\n  redundancyFactor = 3;\n\n  _gossipLoop!: SimpleBloomMod;\n\n  networkRequestsExecutor = new MiddlewareExecutor<\n    NetworkRequestInfo<any, any>\n  >();\n\n  neighborConnections: Dictionary<Connection | undefined> = {};\n\n  constructor(\n    state: P2pCellState,\n    public cell: Cell,\n    protected network: Network\n  ) {\n    this.farKnownPeers = state.farKnownPeers;\n    this.redundancyFactor = state.redundancyFactor;\n    this.neighborNumber = state.neighborNumber;\n\n    // TODO: try to connect with already known neighbors\n\n    this.storageArc = {\n      center_loc: location(this.cellId[1]),\n      half_length: Math.pow(2, 33),\n    };\n  }\n\n  getState(): P2pCellState {\n    return {\n      badAgents: this.badAgents,\n      neighbors: this.neighbors,\n      farKnownPeers: this.farKnownPeers,\n      redundancyFactor: this.redundancyFactor,\n      neighborNumber: this.neighborNumber,\n    };\n  }\n\n  get cellId(): CellId {\n    return this.cell.cellId;\n  }\n\n  get badAgents() {\n    if (\n      this.cell.conductor.badAgent &&\n      this.cell.conductor.badAgent.config.pretend_invalid_elements_are_valid\n    )\n      return [];\n\n    return this.cell._state.badAgents;\n  }\n\n  /** P2p actions */\n\n  async join(containerCell: Cell): Promise<void> {\n    this.network.bootstrapService.announceCell(this.cellId, containerCell);\n    this._gossipLoop = new SimpleBloomMod(this);\n\n    await this.syncNeighbors();\n  }\n\n  async leave(): Promise<void> {}\n\n  async publish(dht_hash: Hash, ops: Dictionary<DHTOp>): Promise<void> {\n    await this.network.kitsune.rpc_multi(\n      this.cellId[0],\n      this.cellId[1],\n      dht_hash,\n      this.redundancyFactor,\n      this.badAgents,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          NetworkRequestType.PUBLISH_REQUEST,\n          { dhtOps: ops },\n          (cell: Cell) => cell.handle_publish(this.cellId[1], true, ops)\n        )\n    );\n  }\n\n  async get(\n    dht_hash: Hash,\n    options: GetOptions\n  ): Promise<GetElementResponse | GetEntryResponse | undefined> {\n    const gets = await this.network.kitsune.rpc_multi(\n      this.cellId[0],\n      this.cellId[1],\n      dht_hash,\n      1, // TODO: what about this?\n      this.badAgents,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          NetworkRequestType.GET_REQUEST,\n          { hash: dht_hash, options },\n          (cell: Cell) => cell.handle_get(dht_hash, options)\n        )\n    );\n\n    return gets.find(get => !!get);\n  }\n\n  async get_links(\n    base_address: Hash,\n    options: GetLinksOptions\n  ): Promise<GetLinksResponse[]> {\n    return this.network.kitsune.rpc_multi(\n      this.cellId[0],\n      this.cellId[1],\n      base_address,\n      1, // TODO: what about this?\n      this.badAgents,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          NetworkRequestType.GET_REQUEST,\n          { hash: base_address, options },\n          (cell: Cell) => cell.handle_get_links(base_address, options)\n        )\n    );\n  }\n\n  async call_remote(\n    agent: AgentPubKey,\n    zome: string,\n    fnName: string,\n    cap: CapSecret | undefined,\n    payload: any\n  ): Promise<any> {\n    return this.network.kitsune.rpc_single(\n      this.cellId[0],\n      this.cellId[1],\n      agent,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          NetworkRequestType.CALL_REMOTE,\n          {},\n          (cell: Cell) =>\n            cell.handle_call_remote(this.cellId[1], zome, fnName, cap, payload)\n        )\n    );\n  }\n\n  /** Neighbor handling */\n\n  public get neighbors(): Array<AgentPubKey> {\n    return Object.keys(this.neighborConnections);\n  }\n\n  async connectWith(peer: Cell): Promise<Connection> {\n    if (this.neighborConnections[peer.agentPubKey])\n      return this.neighborConnections[peer.agentPubKey] as Connection;\n\n    return new Connection(this.cell, peer);\n  }\n\n  async check_agent_valid(peer: Cell): Promise<void> {\n    const peerFirst3Elements = getSourceChainElements(peer._state, 0, 3);\n\n    try {\n      await this.cell.handle_check_agent(peerFirst3Elements);\n    } catch (e) {\n      if (!this.cell._state.badAgents.includes(peer.agentPubKey))\n        this.cell._state.badAgents.push(peer.agentPubKey);\n\n      throw new Error('Invalid agent');\n    }\n  }\n\n  handleOpenNeighborConnection(from: Cell, connection: Connection) {\n    this.neighborConnections[from.agentPubKey] = connection;\n  }\n\n  handleCloseNeighborConnection(from: Cell) {\n    this.neighborConnections[from.agentPubKey] = undefined;\n    delete this.neighborConnections[from.agentPubKey];\n    this.syncNeighbors();\n  }\n\n  async openNeighborConnection(withPeer: Cell): Promise<Connection> {\n    if (!this.neighborConnections[withPeer.agentPubKey]) {\n      // Try to connect: can fail due to validation\n      await this._executeNetworkRequest(\n        withPeer,\n        NetworkRequestType.CONNECT,\n        {},\n        peer =>\n          Promise.all([\n            this.check_agent_valid(withPeer),\n            withPeer.p2p.check_agent_valid(this.cell),\n          ])\n      );\n\n      const connection = await this.connectWith(withPeer);\n      this.neighborConnections[withPeer.agentPubKey] = connection;\n\n      withPeer.p2p.handleOpenNeighborConnection(this.cell, connection);\n    }\n    return this.neighborConnections[withPeer.agentPubKey] as Connection;\n  }\n\n  closeNeighborConnection(withPeer: AgentPubKey) {\n    if (this.neighborConnections[withPeer]) {\n      const connection = this.neighborConnections[withPeer] as Connection;\n      connection.close();\n      this.neighborConnections[withPeer] = undefined;\n      delete this.neighborConnections[withPeer];\n\n      connection\n        .getPeer(this.cellId[1])\n        .p2p.handleCloseNeighborConnection(this.cell);\n    }\n  }\n\n  async syncNeighbors() {\n    const dnaHash = this.cellId[0];\n    const agentPubKey = this.cellId[1];\n\n    const badAgents = this.badAgents;\n\n    for (const badAgent of badAgents) {\n      if (this.neighborConnections[badAgent]) {\n        this.closeNeighborConnection(badAgent);\n      }\n    }\n\n    this.farKnownPeers = this.network.bootstrapService\n      .getFarKnownPeers(dnaHash, agentPubKey, badAgents)\n      .map(p => p.agentPubKey);\n\n    const neighbors = this.network.bootstrapService\n      .getNeighborhood(dnaHash, agentPubKey, this.neighborNumber, badAgents)\n      .filter(cell => cell.agentPubKey != agentPubKey);\n\n    const newNeighbors = neighbors.filter(\n      cell => !this.neighbors.includes(cell.agentPubKey)\n    );\n\n    const neighborsToForget = this.neighbors.filter(\n      n => !neighbors.find(c => c.agentPubKey === n)\n    );\n\n    neighborsToForget.forEach(n => this.closeNeighborConnection(n));\n\n    const promises = newNeighbors.map(async neighbor => {\n      try {\n        await this.openNeighborConnection(neighbor);\n      } catch (e) {\n        // Couldn't open connection\n      }\n    });\n\n    await Promise.all(promises);\n\n    if (Object.keys(this.neighborConnections).length < this.neighborNumber) {\n      setTimeout(() => this.syncNeighbors(), 400);\n    }\n  }\n\n  // TODO: fix when sharding is implemented\n  shouldWeHold(dhtOpHash: Hash): boolean {\n    const neighbors = this.network.bootstrapService.getNeighborhood(\n      this.cellId[0],\n      dhtOpHash,\n      this.redundancyFactor + 1,\n      this.badAgents\n    );\n\n    const index = neighbors.findIndex(\n      cell => cell.agentPubKey === this.cellId[1]\n    );\n    return index >= 0 && index < this.redundancyFactor;\n  }\n\n  /** Gossip */\n\n  public async outgoing_gossip(\n    to_agent: AgentPubKey,\n    gossips: GossipData,\n    warrant: boolean = false\n  ): Promise<void> {\n    // TODO: remove peer discovery?\n    await this.network.kitsune.rpc_single(\n      this.cellId[0],\n      this.cellId[1],\n      to_agent,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          warrant ? NetworkRequestType.WARRANT : NetworkRequestType.GOSSIP,\n          {},\n          (cell: Cell) => cell.handle_gossip(this.cellId[1], gossips)\n        )\n    );\n  }\n\n  /** Executors */\n\n  private async _executeNetworkRequest<R, T extends NetworkRequestType, D>(\n    toCell: Cell,\n    type: T,\n    details: D,\n    request: NetworkRequest<R>\n  ): Promise<R> {\n    const networkRequest: NetworkRequestInfo<T, D> = {\n      fromAgent: this.cellId[1],\n      toAgent: toCell.agentPubKey,\n      dnaHash: this.cellId[0],\n      type,\n      details,\n    };\n\n    const connection = await this.connectWith(toCell);\n\n    const result = await this.networkRequestsExecutor.execute(\n      () => connection.sendRequest(this.cellId[1], request),\n      networkRequest\n    );\n\n    return result;\n  }\n}\n","import { AgentPubKey, Hash } from '@holochain-open-dev/core-types';\nimport { Cell } from '../cell/cell';\nimport { Network } from './network';\nimport { NetworkRequest } from './network-request';\n\nexport class KitsuneP2p {\n  discover: Discover;\n  constructor(protected network: Network) {\n    this.discover = new Discover(network);\n  }\n\n  async rpc_single<T>(\n    dna_hash: Hash,\n    from_agent: AgentPubKey,\n    to_agent: AgentPubKey,\n    networkRequest: NetworkRequest<T>\n  ): Promise<T> {\n    const peer = await this.discover.peer_discover(\n      dna_hash,\n      from_agent,\n      to_agent\n    );\n    return networkRequest(peer);\n  }\n\n  async rpc_multi<T>(\n    dna_hash: Hash,\n    from_agent: AgentPubKey,\n    basis: Hash,\n    remote_agent_count: number,\n    filtered_agents: AgentPubKey[],\n    networkRequest: NetworkRequest<T>\n  ): Promise<Array<T>> {\n    // Discover neighbors\n    return this.discover.message_neighborhood(\n      dna_hash,\n      from_agent,\n      basis,\n      remote_agent_count,\n      filtered_agents,\n      networkRequest\n    );\n  }\n\n}\n\n// From https://github.com/holochain/holochain/blob/develop/crates/kitsune_p2p/kitsune_p2p/src/spawn/actor/discover.rs\nexport class Discover {\n  constructor(protected network: Network) {}\n\n  // TODO fix this\n  async peer_discover(\n    dna_hash: Hash,\n    from_agent: AgentPubKey,\n    to_agent: AgentPubKey\n  ): Promise<Cell> {\n    return this.network.bootstrapService.cells[dna_hash][to_agent];\n  }\n\n  async message_neighborhood<T>(\n    dna_hash: Hash,\n    from_agent: AgentPubKey,\n    basis: Hash,\n    remote_agent_count: number,\n    filtered_agents: AgentPubKey[],\n    networkRequest: NetworkRequest<T>\n  ): Promise<Array<T>> {\n    const agents = await this.search_for_agents(\n      dna_hash,\n      basis,\n      remote_agent_count,\n      filtered_agents\n    );\n\n    const promises = agents.map(cell => networkRequest(cell));\n    return Promise.all(promises);\n  }\n\n  private async search_for_agents(\n    dna_hash: Hash,\n    basis: Hash,\n    remote_agent_count: number,\n    filtered_agents: AgentPubKey[]\n  ): Promise<Cell[]> {\n    return this.network.bootstrapService.getNeighborhood(\n      dna_hash,\n      basis,\n      remote_agent_count,\n      filtered_agents\n    );\n  }\n}\n","import { CellId, Dictionary, Hash } from '@holochain-open-dev/core-types';\nimport { BootstrapService } from '../../bootstrap/bootstrap-service';\nimport { Cell } from '../cell/cell';\nimport { Conductor } from '../conductor';\nimport { P2pCell, P2pCellState } from '../network/p2p-cell';\nimport { KitsuneP2p } from './kitsune_p2p';\nimport { NetworkRequest } from './network-request';\n\nexport interface NetworkState {\n  // P2pCellState by dna hash / agentPubKey\n  p2pCellsState: Dictionary<Dictionary<P2pCellState>>;\n}\n\nexport class Network {\n  // P2pCells contained in this conductor\n  p2pCells: Dictionary<Dictionary<P2pCell>>;\n  kitsune: KitsuneP2p;\n\n  constructor(\n    state: NetworkState,\n    public conductor: Conductor,\n    public bootstrapService: BootstrapService\n  ) {\n    this.p2pCells = {};\n    for (const [dnaHash, p2pState] of Object.entries(state.p2pCellsState)) {\n      if (!this.p2pCells[dnaHash]) this.p2pCells[dnaHash];\n      for (const [agentPubKey, p2pCellState] of Object.entries(p2pState)) {\n        this.p2pCells[dnaHash][agentPubKey] = new P2pCell(\n          p2pCellState,\n          conductor.getCell(dnaHash, agentPubKey) as Cell,\n          this\n        );\n      }\n    }\n\n    this.kitsune = new KitsuneP2p(this);\n  }\n\n  getState(): NetworkState {\n    const p2pCellsState: Dictionary<Dictionary<P2pCellState>> = {};\n\n    for (const [dnaHash, dnaP2pCells] of Object.entries(this.p2pCells)) {\n      if (!p2pCellsState[dnaHash]) p2pCellsState[dnaHash] = {};\n\n      for (const [agentPubKey, p2pCell] of Object.entries(dnaP2pCells)) {\n        p2pCellsState[dnaHash][agentPubKey] = p2pCell.getState();\n      }\n    }\n\n    return {\n      p2pCellsState,\n    };\n  }\n\n  getAllP2pCells(): P2pCell[] {\n    const nestedCells = Object.values(this.p2pCells).map(dnaCells =>\n      Object.values(dnaCells)\n    );\n    return ([] as P2pCell[]).concat(...nestedCells);\n  }\n\n  createP2pCell(cell: Cell): P2pCell {\n    const cellId = cell.cellId;\n    const dnaHash = cellId[0];\n\n    const state: P2pCellState = {\n      neighbors: [],\n      farKnownPeers: [],\n      redundancyFactor: 3,\n      neighborNumber: 5,\n      badAgents: [],\n    };\n\n    const p2pCell = new P2pCell(state, cell, this);\n\n    if (!this.p2pCells[dnaHash]) this.p2pCells[dnaHash] = {};\n    this.p2pCells[dnaHash][cellId[1]] = p2pCell;\n\n    return p2pCell;\n  }\n\n  public sendRequest<T>(\n    dna: Hash,\n    fromAgent: Hash,\n    toAgent: Hash,\n    request: NetworkRequest<T>\n  ): Promise<T> {\n    const localCell =\n      this.conductor.cells[dna] && this.conductor.cells[dna][toAgent];\n\n    if (localCell) return request(localCell);\n\n    return request(this.bootstrapService.cells[dna][toAgent]);\n  }\n}\n","import {\n  AgentPubKey,\n  CellId,\n  Dictionary,\n  Hash,\n} from '@holochain-open-dev/core-types';\nimport { Cell, getCellId } from '../core/cell';\nimport { hash, HashType } from '../processors/hash';\nimport { Network, NetworkState } from './network/network';\n\nimport {\n  InstalledHapps,\n  SimulatedDna,\n  SimulatedHappBundle,\n} from '../dnas/simulated-dna';\nimport { CellState } from './cell/state';\nimport { BootstrapService } from '../bootstrap/bootstrap-service';\nimport { BadAgent, BadAgentConfig } from './bad-agent';\n\nexport interface ConductorState {\n  // DnaHash / AgentPubKey\n  cellsState: Dictionary<Dictionary<CellState>>;\n  networkState: NetworkState;\n  registeredDnas: Dictionary<SimulatedDna>;\n  installedHapps: Dictionary<InstalledHapps>;\n  name: string;\n  badAgent: BadAgent | undefined;\n}\n\nexport class Conductor {\n  readonly cells: Dictionary<Dictionary<Cell>>;\n  registeredDnas!: Dictionary<SimulatedDna>;\n  installedHapps!: Dictionary<InstalledHapps>;\n\n  network: Network;\n  name: string;\n\n  badAgent: BadAgent | undefined; // If undefined, this is an honest agent\n\n  constructor(state: ConductorState, bootstrapService: BootstrapService) {\n    this.network = new Network(state.networkState, this, bootstrapService);\n    this.registeredDnas = state.registeredDnas;\n    this.installedHapps = state.installedHapps;\n    this.name = state.name;\n\n    this.cells = {};\n    for (const [dnaHash, dnaCellsStates] of Object.entries(state.cellsState)) {\n      if (!this.cells[dnaHash]) this.cells[dnaHash] = {};\n\n      for (const [agentPubKey, cellState] of Object.entries(dnaCellsStates)) {\n        this.cells[dnaHash][agentPubKey] = new Cell(cellState, this);\n      }\n    }\n  }\n\n  static async create(\n    bootstrapService: BootstrapService,\n    name: string\n  ): Promise<Conductor> {\n    const state: ConductorState = {\n      cellsState: {},\n      networkState: {\n        p2pCellsState: {},\n      },\n      registeredDnas: {},\n      installedHapps: {},\n      name,\n      badAgent: undefined,\n    };\n\n    return new Conductor(state, bootstrapService);\n  }\n\n  getState(): ConductorState {\n    const cellsState: Dictionary<Dictionary<CellState>> = {};\n\n    for (const [dnaHash, dnaCells] of Object.entries(this.cells)) {\n      if (!cellsState[dnaHash]) cellsState[dnaHash];\n\n      for (const [agentPubKey, cell] of Object.entries(dnaCells)) {\n        cellsState[dnaHash][agentPubKey] = cell.getState();\n      }\n    }\n\n    return {\n      name: this.name,\n      networkState: this.network.getState(),\n      cellsState,\n      registeredDnas: this.registeredDnas,\n      installedHapps: this.installedHapps,\n      badAgent: this.badAgent,\n    };\n  }\n\n  getAllCells(): Cell[] {\n    const nestedCells = Object.values(this.cells).map(dnaCells =>\n      Object.values(dnaCells)\n    );\n\n    return ([] as Cell[]).concat(...nestedCells);\n  }\n\n  getCells(dnaHash: Hash): Cell[] {\n    const dnaCells = this.cells[dnaHash];\n    return dnaCells ? Object.values(dnaCells) : [];\n  }\n\n  getCell(dnaHash: Hash, agentPubKey: AgentPubKey): Cell | undefined {\n    return this.cells[dnaHash] ? this.cells[dnaHash][agentPubKey] : undefined;\n  }\n\n  /** Bad agents */\n\n  setBadAgent(badAgentConfig: BadAgentConfig) {\n    if (!this.badAgent)\n      this.badAgent = { config: badAgentConfig, counterfeitDnas: {} };\n    this.badAgent.config = badAgentConfig;\n  }\n\n  setCounterfeitDna(cellId: CellId, dna: SimulatedDna) {\n    if (!this.badAgent) throw new Error('This is not a bad agent');\n\n    if (!this.badAgent.counterfeitDnas[cellId[0]])\n      this.badAgent.counterfeitDnas[cellId[0]] = {};\n    this.badAgent.counterfeitDnas[cellId[0]][cellId[1]] = dna;\n  }\n\n  /** Admin API */\n  /* \n  async registerDna(dna_template: SimulatedDna): Promise<Hash> {\n    const templateHash = hash(dna_template, HashType.DNA);\n\n    this.registeredDnas[templateHash] = dna_template;\n    return templateHash;\n  } */\n\n  async cloneCell(\n    installedAppId: string,\n    slotNick: string,\n    uid?: string,\n    properties?: Dictionary<any>,\n    membraneProof?: any\n  ): Promise<Cell> {\n    if (!this.installedHapps[installedAppId])\n      throw new Error(`Given app id doesn't exist`);\n\n    const installedApp = this.installedHapps[installedAppId];\n    if (!installedApp.slots[slotNick])\n      throw new Error(`The slot nick doesn't exist for the given app id`);\n\n    const slotToClone = installedApp.slots[slotNick];\n\n    const hashOfDnaToClone = slotToClone.base_cell_id[0];\n    const dnaToClone = this.registeredDnas[hashOfDnaToClone];\n\n    if (!dnaToClone) {\n      throw new Error(\n        `The dna to be cloned is not registered on this conductor`\n      );\n    }\n\n    const dna: SimulatedDna = { ...dnaToClone };\n\n    if (uid) dna.uid = uid;\n    if (properties) dna.properties = properties;\n\n    const newDnaHash = hash(dna, HashType.DNA);\n\n    if (newDnaHash === hashOfDnaToClone)\n      throw new Error(\n        `Trying to clone a dna would create exactly the same DNA`\n      );\n\n    const cell = await this.createCell(\n      dna,\n      installedApp.agent_pub_key,\n      membraneProof\n    );\n    this.installedHapps[installedAppId].slots[slotNick].clones.push(\n      cell.cellId\n    );\n    this.registeredDnas[newDnaHash] = dna;\n\n    return cell;\n  }\n\n  async installHapp(\n    happ: SimulatedHappBundle,\n    membrane_proofs: Dictionary<any> // segmented by CellNick\n  ): Promise<void> {\n    const rand = `${Math.random().toString()}/${Date.now()}`;\n    const agentId = hash(rand, HashType.AGENT);\n\n    this.installedHapps[happ.name] = {\n      agent_pub_key: agentId,\n      app_id: happ.name,\n      slots: {},\n    };\n\n    for (const [cellNick, dnaSlot] of Object.entries(happ.slots)) {\n      const dnaHash = hash(dnaSlot.dna, HashType.DNA);\n      this.registeredDnas[dnaHash] = dnaSlot.dna;\n\n      this.installedHapps[happ.name].slots[cellNick] = {\n        base_cell_id: [dnaHash, agentId],\n        is_provisioned: !dnaSlot.deferred,\n        clones: [],\n      };\n\n      if (!dnaSlot.deferred) {\n        const cell = await this.createCell(\n          dnaSlot.dna,\n          agentId,\n          membrane_proofs[cellNick]\n        );\n      }\n    }\n  }\n\n  private async createCell(\n    dna: SimulatedDna,\n    agentPubKey: string,\n    membraneProof?: any\n  ): Promise<Cell> {\n    const newDnaHash = hash(dna, HashType.DNA);\n\n    const cellId: CellId = [newDnaHash, agentPubKey];\n    const cell = await Cell.create(this, cellId, membraneProof);\n\n    if (!this.cells[cell.dnaHash]) this.cells[cell.dnaHash] = {};\n\n    this.cells[cell.dnaHash][cell.agentPubKey] = cell;\n\n    return cell;\n  }\n\n  /** App API */\n\n  callZomeFn(args: {\n    cellId: CellId;\n    zome: string;\n    fnName: string;\n    payload: any;\n    cap: string;\n  }): Promise<any> {\n    const dnaHash = args.cellId[0];\n    const agentPubKey = args.cellId[1];\n    const cell = this.cells[dnaHash][agentPubKey];\n\n    if (!cell)\n      throw new Error(`No cells existst with cellId ${dnaHash}:${agentPubKey}`);\n\n    return cell.callZomeFn({\n      zome: args.zome,\n      cap: args.cap,\n      fnName: args.fnName,\n      payload: args.payload,\n      provenance: agentPubKey,\n    });\n  }\n}\n","import { Update } from '@holochain-open-dev/core-types';\nimport { GetStrategy } from '../types';\nimport {\n  SimulatedDna,\n  SimulatedHappBundle,\n  SimulatedZome,\n} from './simulated-dna';\n\nexport const demoEntriesZome: SimulatedZome = {\n  name: 'demo_entries',\n  entry_defs: [\n    {\n      id: 'demo_entry',\n      visibility: 'Public',\n    },\n  ],\n  zome_functions: {\n    create_entry: {\n      call: ({ create_entry }) => async ({ content }) => {\n        return create_entry({ content, entry_def_id: 'demo_entry' });\n      },\n      arguments: [{ name: 'content', type: 'any' }],\n    },\n    hash_entry: {\n      call: ({ hash_entry }) => async ({ entry }) => {\n        return hash_entry(entry);\n      },\n      arguments: [{ name: 'entry', type: 'any' }],\n    },\n    get: {\n      call: ({ get }) => ({ hash }) => {\n        return get(hash, { strategy: GetStrategy.Latest });\n      },\n      arguments: [{ name: 'hash', type: 'AnyDhtHash' }],\n    },\n    get_details: {\n      call: ({ get_details }) => ({ hash }) => {\n        return get_details(hash, { strategy: GetStrategy.Latest });\n      },\n      arguments: [{ name: 'hash', type: 'AnyDhtHash' }],\n    },\n    update_entry: {\n      call: ({ update_entry }) => ({\n        original_header_address,\n        new_content,\n      }) => {\n        return update_entry(original_header_address, {\n          content: new_content,\n          entry_def_id: 'demo_entry',\n        });\n      },\n      arguments: [\n        { name: 'original_header_address', type: 'HeaderHash' },\n        { name: 'new_content', type: 'String' },\n      ],\n    },\n    delete_entry: {\n      call: ({ delete_entry }) => ({ deletes_address }) => {\n        return delete_entry(deletes_address);\n      },\n      arguments: [{ name: 'deletes_address', type: 'HeaderHash' }],\n    },\n  },\n  validation_functions: {\n    validate_update_entry_demo_entry: hdk => async ({ element }) => {\n      const update = element.signed_header.header.content as Update;\n      const updateAuthor = update.author;\n\n      const originalHeader = await hdk.get(update.original_header_address);\n\n      if (!originalHeader)\n        return {\n          resolved: false,\n          depsHashes: [update.original_header_address],\n        };\n\n      if (originalHeader.signed_header.header.content.author !== updateAuthor)\n        return {\n          valid: false,\n          resolved: true,\n        };\n\n      return { valid: true, resolved: true };\n    },\n  },\n};\n\nexport const demoLinksZome: SimulatedZome = {\n  name: 'demo_links',\n  entry_defs: [],\n  zome_functions: {\n    create_link: {\n      call: ({ create_link }) => ({ base, target, tag }) => {\n        return create_link({ base, target, tag });\n      },\n      arguments: [\n        { name: 'base', type: 'EntryHash' },\n        { name: 'target', type: 'EntryHash' },\n        { name: 'tag', type: 'any' },\n      ],\n    },\n    get_links: {\n      call: ({ get_links }) => ({ base }) => {\n        return get_links(base);\n      },\n      arguments: [{ name: 'base', type: 'EntryHash' }],\n    },\n    delete_link: {\n      call: ({ delete_link }) => ({ add_link_header }) => {\n        return delete_link(add_link_header);\n      },\n      arguments: [{ name: 'add_link_header', type: 'HeaderHash' }],\n    },\n  },\n  validation_functions: {},\n};\nexport const demoPathsZome: SimulatedZome = {\n  name: 'demo_paths',\n  entry_defs: [\n    {\n      id: 'path',\n      visibility: 'Public',\n    },\n  ],\n  zome_functions: {\n    ensure_path: {\n      call: hdk => ({ path }) => {\n        return hdk.path.ensure(path);\n      },\n      arguments: [{ name: 'path', type: 'String' }],\n    },\n  },\n  validation_functions: {},\n};\n\nexport function demoDna(): SimulatedDna {\n  const zomes = [demoEntriesZome, demoLinksZome, demoPathsZome];\n  return {\n    properties: {},\n    uid: '',\n    zomes,\n  };\n}\n\nexport function demoHapp(): SimulatedHappBundle {\n  return {\n    name: 'demo-happ',\n    description: '',\n    slots: {\n      default: {\n        dna: demoDna(),\n        deferred: false,\n      },\n    },\n  };\n}\n","import {\n  AgentPubKey,\n  CellId,\n  Dictionary,\n  Hash,\n} from '@holochain-open-dev/core-types';\nimport { Cell } from '../core/cell';\nimport {\n  getClosestNeighbors,\n  getFarthestNeighbors,\n} from '../core/network/utils';\n\nexport class BootstrapService {\n  cells: Dictionary<Dictionary<Cell>> = {};\n\n  announceCell(cellId: CellId, cell: Cell) {\n    const dnaHash = cellId[0];\n    const agentPubKey = cellId[1];\n    if (!this.cells[dnaHash]) this.cells[dnaHash] = {};\n    this.cells[dnaHash][agentPubKey] = cell;\n  }\n\n  getNeighborhood(\n    dnaHash: Hash,\n    basis_dht_hash: Hash,\n    numNeighbors: number,\n    filteredAgents: Hash[] = []\n  ): Cell[] {\n    const cells = Object.keys(this.cells[dnaHash]).filter(\n      cellPubKey => !filteredAgents.includes(cellPubKey)\n    );\n\n    const neighborsKeys = getClosestNeighbors(\n      cells,\n      basis_dht_hash,\n      numNeighbors\n    );\n\n    return neighborsKeys.map(pubKey => this.cells[dnaHash][pubKey]);\n  }\n\n  getFarKnownPeers(\n    dnaHash: Hash,\n    agentPubKey: string,\n    filteredAgents: Hash[] = []\n  ): Cell[] {\n    const cells = Object.keys(this.cells[dnaHash]).filter(\n      peerPubKey =>\n        peerPubKey !== agentPubKey && !filteredAgents.includes(peerPubKey)\n    );\n\n    const farthestKeys = getFarthestNeighbors(cells, agentPubKey);\n\n    return farthestKeys.map(pubKey => this.cells[dnaHash][pubKey]);\n  }\n}\n","import { BootstrapService } from '../bootstrap/bootstrap-service';\nimport { Conductor } from '../core/conductor';\nimport { SimulatedHappBundle } from '../dnas/simulated-dna';\nimport { uniqueNamesGenerator, Config, names } from 'unique-names-generator';\n\nconst config: Config = {\n  dictionaries: [names],\n};\n\nexport async function createConductors(\n  conductorsToCreate: number,\n  currentConductors: Conductor[],\n  happ: SimulatedHappBundle\n): Promise<Conductor[]> {\n  const bootstrapService =\n    currentConductors.length === 0\n      ? new BootstrapService()\n      : currentConductors[0].network.bootstrapService;\n\n  const newConductorsPromises: Promise<Conductor>[] = [];\n  for (let i = 0; i < conductorsToCreate; i++) {\n    const characterName: string = uniqueNamesGenerator(config);\n    const conductor = Conductor.create(bootstrapService, characterName);\n    newConductorsPromises.push(conductor);\n  }\n\n  const newConductors = await Promise.all(newConductorsPromises);\n\n  const allConductors = [...currentConductors, ...newConductors];\n\n  await Promise.all(allConductors.map(async c => c.installHapp(happ, {})));\n\n  return allConductors;\n}\n"],"names":["m","v","b2b","b2s","blake","ValidationStatus"],"mappings":"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,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;AACtD,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;AACtD,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CA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"}